// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rx_axis_words7131 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        axis_V_V_TDATA,
        axis_V_V_TVALID,
        axis_V_V_TREADY,
        loop_count_V,
        final_burst_length_V,
        val_assign,
        cache_V1_address0,
        cache_V1_ce0,
        cache_V1_we0,
        cache_V1_d0,
        rx_buffer_V_offset,
        rx_buffer_V_offset_out_din,
        rx_buffer_V_offset_out_full_n,
        rx_buffer_V_offset_out_write,
        rx_buffer_V_offset1,
        rx_buffer_V_offset1_out_din,
        rx_buffer_V_offset1_out_full_n,
        rx_buffer_V_offset1_out_write,
        ap_return
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_pp0_stage0 = 7'd4;
parameter    ap_ST_fsm_pp0_stage1 = 7'd8;
parameter    ap_ST_fsm_pp0_stage2 = 7'd16;
parameter    ap_ST_fsm_pp0_stage3 = 7'd32;
parameter    ap_ST_fsm_state8 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] axis_V_V_TDATA;
input   axis_V_V_TVALID;
output   axis_V_V_TREADY;
input  [11:0] loop_count_V;
input  [11:0] final_burst_length_V;
input  [11:0] val_assign;
output  [8:0] cache_V1_address0;
output   cache_V1_ce0;
output   cache_V1_we0;
output  [63:0] cache_V1_d0;
input  [0:0] rx_buffer_V_offset;
output  [0:0] rx_buffer_V_offset_out_din;
input   rx_buffer_V_offset_out_full_n;
output   rx_buffer_V_offset_out_write;
input  [28:0] rx_buffer_V_offset1;
output  [28:0] rx_buffer_V_offset1_out_din;
input   rx_buffer_V_offset1_out_full_n;
output   rx_buffer_V_offset1_out_write;
output  [19:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg axis_V_V_TREADY;
reg cache_V1_ce0;
reg cache_V1_we0;
reg rx_buffer_V_offset_out_write;
reg rx_buffer_V_offset1_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    axis_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] exitcond1_i_i_i_i_i_fu_305_p2;
wire   [0:0] tmp_5_i_i_i_i_i_fu_320_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond1_i_i_i_i_i_reg_415;
reg   [0:0] tmp_5_i_i_i_i_i_reg_424;
reg   [0:0] tmp_6_1_i_i_i_i_i_reg_438;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] tmp_6_2_i_i_i_i_i_reg_452;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] tmp_6_3_i_i_i_i_i_reg_466;
reg    rx_buffer_V_offset_out_blk_n;
wire    ap_CS_fsm_state2;
reg    rx_buffer_V_offset1_out_blk_n;
reg   [9:0] i_i_i_i_i_i_reg_181;
reg   [11:0] p_098_3_2_i_i_i_i_i_reg_203;
wire   [10:0] tmp_fu_269_p1;
reg   [10:0] tmp_reg_405;
reg    ap_block_state1;
wire   [0:0] tmp_i_i_i_i_i_fu_287_p2;
reg   [0:0] tmp_i_i_i_i_i_reg_410;
reg    ap_predicate_op54_read_state3;
reg    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] i_fu_311_p2;
reg   [9:0] i_reg_419;
reg   [15:0] tmp_V_reg_428;
wire   [11:0] data_length_V_1_i_i_s_fu_326_p2;
wire   [0:0] tmp_6_1_i_i_i_i_i_fu_332_p2;
wire   [11:0] data_length_V_1_1_i_s_fu_338_p2;
reg   [11:0] data_length_V_1_1_i_s_reg_442;
reg    ap_predicate_op59_read_state4;
reg    ap_block_state4_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] tmp_6_2_i_i_i_i_i_fu_344_p2;
wire   [11:0] data_length_V_1_2_i_s_fu_350_p2;
reg   [11:0] data_length_V_1_2_i_s_reg_456;
reg    ap_predicate_op65_read_state5;
reg    ap_block_state5_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
wire   [0:0] tmp_6_3_i_i_i_i_i_fu_356_p2;
reg    ap_predicate_op70_read_state6;
reg    ap_block_state6_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_state2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage3_subdone;
reg   [9:0] ap_phi_mux_i_i_i_i_i_i_phi_fu_185_p4;
reg   [11:0] ap_phi_mux_p_098_3_1_i_i_i_i_i_phi_fu_196_p4;
reg   [11:0] ap_phi_reg_pp0_iter0_p_098_3_1_i_i_i_i_i_reg_193;
reg   [11:0] ap_phi_mux_p_098_3_2_i_i_i_i_i_phi_fu_206_p4;
reg   [11:0] ap_phi_reg_pp0_iter0_p_098_3_2_i_i_i_i_i_reg_203;
reg   [11:0] ap_phi_mux_p_098_3_3_i_i_i_i_i_phi_fu_217_p4;
wire   [11:0] data_length_V_1_3_i_s_fu_362_p2;
reg   [11:0] ap_phi_reg_pp0_iter0_p_098_3_3_i_i_i_i_i_reg_214;
reg   [15:0] ap_phi_reg_pp0_iter0_p_1_1_i_i_i_i_i_reg_224;
reg   [15:0] ap_phi_reg_pp0_iter1_p_1_1_i_i_i_i_i_reg_224;
reg   [15:0] ap_phi_reg_pp0_iter0_p_1_2_i_i_i_i_i_reg_235;
reg   [15:0] ap_phi_reg_pp0_iter1_p_1_2_i_i_i_i_i_reg_235;
wire   [15:0] ap_phi_reg_pp0_iter0_p_1_3_i_i_i_i_i_reg_246;
reg   [15:0] ap_phi_reg_pp0_iter1_p_1_3_i_i_i_i_i_reg_246;
reg   [63:0] ap_phi_mux_p_094_1_i_i_i_i_i_phi_fu_261_p4;
wire   [63:0] axi_word_V_3_i_i_i_i_fu_374_p5;
wire   [63:0] tmp_7_i_i_i_i_i_fu_386_p1;
reg   [11:0] p_098_1_i_i_i_i_i_fu_112;
wire   [11:0] final_burst_length_V_4_fu_293_p3;
wire   [12:0] lhs_V_cast_i_i_i_i_i_fu_273_p1;
wire   [12:0] tmp_cast_i_i_i_i_i_fu_283_p1;
wire   [12:0] r_V_fu_277_p2;
wire    ap_CS_fsm_state8;
reg   [6:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_429;
reg    ap_condition_435;
reg    ap_condition_441;
reg    ap_condition_444;
reg    ap_condition_439;
reg    ap_condition_121;
reg    ap_condition_225;
reg    ap_condition_106;
reg    ap_condition_211;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((rx_buffer_V_offset1_out_full_n == 1'b0) | (rx_buffer_V_offset_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((rx_buffer_V_offset1_out_full_n == 1'b0) | (rx_buffer_V_offset_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_435)) begin
            ap_phi_reg_pp0_iter0_p_1_1_i_i_i_i_i_reg_224 <= 16'd0;
        end else if ((1'b1 == ap_condition_429)) begin
            ap_phi_reg_pp0_iter0_p_1_1_i_i_i_i_i_reg_224 <= axis_V_V_TDATA;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_439)) begin
        if ((1'b1 == ap_condition_444)) begin
            ap_phi_reg_pp0_iter0_p_1_2_i_i_i_i_i_reg_235 <= 16'd0;
        end else if ((1'b1 == ap_condition_441)) begin
            ap_phi_reg_pp0_iter0_p_1_2_i_i_i_i_i_reg_235 <= axis_V_V_TDATA;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_225)) begin
        if ((1'b1 == ap_condition_121)) begin
            ap_phi_reg_pp0_iter1_p_1_3_i_i_i_i_i_reg_246 <= axis_V_V_TDATA;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_1_3_i_i_i_i_i_reg_246 <= ap_phi_reg_pp0_iter0_p_1_3_i_i_i_i_i_reg_246;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((rx_buffer_V_offset1_out_full_n == 1'b0) | (rx_buffer_V_offset_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        i_i_i_i_i_i_reg_181 <= 10'd0;
    end else if (((exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_i_i_i_i_i_reg_181 <= i_reg_419;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_098_1_i_i_i_i_i_fu_112 <= ap_phi_mux_p_098_3_3_i_i_i_i_i_phi_fu_217_p4;
    end else if ((~((rx_buffer_V_offset1_out_full_n == 1'b0) | (rx_buffer_V_offset_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_098_1_i_i_i_i_i_fu_112 <= final_burst_length_V_4_fu_293_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_211)) begin
        if ((1'b1 == ap_condition_106)) begin
            p_098_3_2_i_i_i_i_i_reg_203 <= data_length_V_1_2_i_s_reg_456;
        end else if ((1'b1 == 1'b1)) begin
            p_098_3_2_i_i_i_i_i_reg_203 <= ap_phi_reg_pp0_iter0_p_098_3_2_i_i_i_i_i_reg_203;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_i_i_i_i_i_fu_320_p2 == 1'd0) & (exitcond1_i_i_i_i_i_fu_305_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_6_1_i_i_i_i_i_fu_332_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter0_p_098_3_1_i_i_i_i_i_reg_193 <= data_length_V_1_i_i_s_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_6_2_i_i_i_i_i_fu_344_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter0_p_098_3_2_i_i_i_i_i_reg_203 <= ap_phi_mux_p_098_3_1_i_i_i_i_i_phi_fu_196_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (tmp_6_3_i_i_i_i_i_fu_356_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter0_p_098_3_3_i_i_i_i_i_reg_214 <= ap_phi_mux_p_098_3_2_i_i_i_i_i_phi_fu_206_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter1_p_1_1_i_i_i_i_i_reg_224 <= ap_phi_reg_pp0_iter0_p_1_1_i_i_i_i_i_reg_224;
        ap_phi_reg_pp0_iter1_p_1_2_i_i_i_i_i_reg_235 <= ap_phi_reg_pp0_iter0_p_1_2_i_i_i_i_i_reg_235;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_i_i_i_i_i_fu_320_p2 == 1'd0) & (tmp_6_1_i_i_i_i_i_fu_332_p2 == 1'd0) & (exitcond1_i_i_i_i_i_fu_305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_length_V_1_1_i_s_reg_442 <= data_length_V_1_1_i_s_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (tmp_6_2_i_i_i_i_i_fu_344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_length_V_1_2_i_s_reg_456 <= data_length_V_1_2_i_s_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond1_i_i_i_i_i_reg_415 <= exitcond1_i_i_i_i_i_fu_305_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_419 <= i_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_i_i_i_i_fu_305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_5_i_i_i_i_i_reg_424 <= tmp_5_i_i_i_i_i_fu_320_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op54_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_6_1_i_i_i_i_i_reg_438 <= tmp_6_1_i_i_i_i_i_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_6_2_i_i_i_i_i_reg_452 <= tmp_6_2_i_i_i_i_i_fu_344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_6_3_i_i_i_i_i_reg_466 <= tmp_6_3_i_i_i_i_i_fu_356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op54_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_reg_428 <= axis_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_i_i_i_i_i_reg_410 <= tmp_i_i_i_i_i_fu_287_p2;
        tmp_reg_405 <= tmp_fu_269_p1;
    end
end

always @ (*) begin
    if ((exitcond1_i_i_i_i_i_fu_305_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_i_i_i_i_i_phi_fu_185_p4 = i_reg_419;
    end else begin
        ap_phi_mux_i_i_i_i_i_i_phi_fu_185_p4 = i_i_i_i_i_i_reg_181;
    end
end

always @ (*) begin
    if (((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_p_094_1_i_i_i_i_i_phi_fu_261_p4 = axi_word_V_3_i_i_i_i_fu_374_p5;
    end else begin
        ap_phi_mux_p_094_1_i_i_i_i_i_phi_fu_261_p4 = 64'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (tmp_6_1_i_i_i_i_i_reg_438 == 1'd0) & (tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_mux_p_098_3_1_i_i_i_i_i_phi_fu_196_p4 = data_length_V_1_1_i_s_reg_442;
    end else begin
        ap_phi_mux_p_098_3_1_i_i_i_i_i_phi_fu_196_p4 = ap_phi_reg_pp0_iter0_p_098_3_1_i_i_i_i_i_reg_193;
    end
end

always @ (*) begin
    if (((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (tmp_6_2_i_i_i_i_i_reg_452 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_phi_mux_p_098_3_2_i_i_i_i_i_phi_fu_206_p4 = data_length_V_1_2_i_s_reg_456;
    end else begin
        ap_phi_mux_p_098_3_2_i_i_i_i_i_phi_fu_206_p4 = ap_phi_reg_pp0_iter0_p_098_3_2_i_i_i_i_i_reg_203;
    end
end

always @ (*) begin
    if (((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (tmp_6_3_i_i_i_i_i_reg_466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        ap_phi_mux_p_098_3_3_i_i_i_i_i_phi_fu_217_p4 = data_length_V_1_3_i_s_fu_362_p2;
    end else begin
        ap_phi_mux_p_098_3_3_i_i_i_i_i_phi_fu_217_p4 = ap_phi_reg_pp0_iter0_p_098_3_3_i_i_i_i_i_reg_214;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (tmp_6_2_i_i_i_i_i_reg_452 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (tmp_6_3_i_i_i_i_i_reg_466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_6_1_i_i_i_i_i_reg_438 == 1'd0) & (tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_5_i_i_i_i_i_fu_320_p2 == 1'd0) & (exitcond1_i_i_i_i_i_fu_305_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        axis_V_V_TDATA_blk_n = axis_V_V_TVALID;
    end else begin
        axis_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op65_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op59_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op70_read_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_predicate_op54_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        axis_V_V_TREADY = 1'b1;
    end else begin
        axis_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cache_V1_ce0 = 1'b1;
    end else begin
        cache_V1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cache_V1_we0 = 1'b1;
    end else begin
        cache_V1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        rx_buffer_V_offset1_out_blk_n = rx_buffer_V_offset1_out_full_n;
    end else begin
        rx_buffer_V_offset1_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((rx_buffer_V_offset1_out_full_n == 1'b0) | (rx_buffer_V_offset_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        rx_buffer_V_offset1_out_write = 1'b1;
    end else begin
        rx_buffer_V_offset1_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        rx_buffer_V_offset_out_blk_n = rx_buffer_V_offset_out_full_n;
    end else begin
        rx_buffer_V_offset_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((rx_buffer_V_offset1_out_full_n == 1'b0) | (rx_buffer_V_offset_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        rx_buffer_V_offset_out_write = 1'b1;
    end else begin
        rx_buffer_V_offset_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((rx_buffer_V_offset1_out_full_n == 1'b0) | (rx_buffer_V_offset_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond1_i_i_i_i_i_fu_305_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((exitcond1_i_i_i_i_i_fu_305_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op54_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op54_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op59_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op59_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op65_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op65_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op70_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op70_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((rx_buffer_V_offset1_out_full_n == 1'b0) | (rx_buffer_V_offset_out_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter0 = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op54_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage1_iter0 = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op59_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage2_iter0 = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op65_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage3_iter0 = ((axis_V_V_TVALID == 1'b0) & (ap_predicate_op70_read_state6 == 1'b1));
end

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_106 = ((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (tmp_6_2_i_i_i_i_i_reg_452 == 1'd0));
end

always @ (*) begin
    ap_condition_121 = ((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (tmp_6_3_i_i_i_i_i_reg_466 == 1'd0));
end

always @ (*) begin
    ap_condition_211 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_225 = ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_429 = ((tmp_6_1_i_i_i_i_i_reg_438 == 1'd0) & (tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_435 = ((tmp_5_i_i_i_i_i_fu_320_p2 == 1'd0) & (exitcond1_i_i_i_i_i_fu_305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_6_1_i_i_i_i_i_fu_332_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_439 = ((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_441 = ((tmp_6_2_i_i_i_i_i_reg_452 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_444 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_6_2_i_i_i_i_i_fu_344_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_1_3_i_i_i_i_i_reg_246 = 16'd0;

always @ (*) begin
    ap_predicate_op54_read_state3 = ((tmp_5_i_i_i_i_i_fu_320_p2 == 1'd0) & (exitcond1_i_i_i_i_i_fu_305_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op59_read_state4 = ((tmp_6_1_i_i_i_i_i_reg_438 == 1'd0) & (tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0));
end

always @ (*) begin
    ap_predicate_op65_read_state5 = ((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (tmp_6_2_i_i_i_i_i_reg_452 == 1'd0));
end

always @ (*) begin
    ap_predicate_op70_read_state6 = ((tmp_5_i_i_i_i_i_reg_424 == 1'd0) & (exitcond1_i_i_i_i_i_reg_415 == 1'd0) & (tmp_6_3_i_i_i_i_i_reg_466 == 1'd0));
end

assign ap_return = {{tmp_reg_405}, {9'd0}};

assign axi_word_V_3_i_i_i_i_fu_374_p5 = {{{{ap_phi_reg_pp0_iter1_p_1_3_i_i_i_i_i_reg_246}, {ap_phi_reg_pp0_iter1_p_1_2_i_i_i_i_i_reg_235}}, {ap_phi_reg_pp0_iter1_p_1_1_i_i_i_i_i_reg_224}}, {tmp_V_reg_428}};

assign cache_V1_address0 = tmp_7_i_i_i_i_i_fu_386_p1;

assign cache_V1_d0 = ap_phi_mux_p_094_1_i_i_i_i_i_phi_fu_261_p4;

assign data_length_V_1_1_i_s_fu_338_p2 = ($signed(p_098_1_i_i_i_i_i_fu_112) + $signed(12'd4094));

assign data_length_V_1_2_i_s_fu_350_p2 = ($signed(ap_phi_mux_p_098_3_1_i_i_i_i_i_phi_fu_196_p4) + $signed(12'd4095));

assign data_length_V_1_3_i_s_fu_362_p2 = ($signed(p_098_3_2_i_i_i_i_i_reg_203) + $signed(12'd4095));

assign data_length_V_1_i_i_s_fu_326_p2 = ($signed(p_098_1_i_i_i_i_i_fu_112) + $signed(12'd4095));

assign exitcond1_i_i_i_i_i_fu_305_p2 = ((ap_phi_mux_i_i_i_i_i_i_phi_fu_185_p4 == 10'd512) ? 1'b1 : 1'b0);

assign final_burst_length_V_4_fu_293_p3 = ((tmp_i_i_i_i_i_reg_410[0:0] === 1'b1) ? final_burst_length_V : 12'd2048);

assign i_fu_311_p2 = (ap_phi_mux_i_i_i_i_i_i_phi_fu_185_p4 + 10'd1);

assign lhs_V_cast_i_i_i_i_i_fu_273_p1 = loop_count_V;

assign r_V_fu_277_p2 = ($signed(13'd8191) + $signed(lhs_V_cast_i_i_i_i_i_fu_273_p1));

assign rx_buffer_V_offset1_out_din = rx_buffer_V_offset1;

assign rx_buffer_V_offset_out_din = rx_buffer_V_offset;

assign tmp_5_i_i_i_i_i_fu_320_p2 = ((p_098_1_i_i_i_i_i_fu_112 == 12'd0) ? 1'b1 : 1'b0);

assign tmp_6_1_i_i_i_i_i_fu_332_p2 = ((data_length_V_1_i_i_s_fu_326_p2 == 12'd0) ? 1'b1 : 1'b0);

assign tmp_6_2_i_i_i_i_i_fu_344_p2 = ((ap_phi_mux_p_098_3_1_i_i_i_i_i_phi_fu_196_p4 == 12'd0) ? 1'b1 : 1'b0);

assign tmp_6_3_i_i_i_i_i_fu_356_p2 = ((ap_phi_mux_p_098_3_2_i_i_i_i_i_phi_fu_206_p4 == 12'd0) ? 1'b1 : 1'b0);

assign tmp_7_i_i_i_i_i_fu_386_p1 = i_i_i_i_i_i_reg_181;

assign tmp_cast_i_i_i_i_i_fu_283_p1 = tmp_fu_269_p1;

assign tmp_fu_269_p1 = val_assign[10:0];

assign tmp_i_i_i_i_i_fu_287_p2 = ((tmp_cast_i_i_i_i_i_fu_283_p1 == r_V_fu_277_p2) ? 1'b1 : 1'b0);

endmodule //rx_axis_words7131
