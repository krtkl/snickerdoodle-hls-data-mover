// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _rx_axis_words25_HH_
#define _rx_axis_words25_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct rx_axis_words25 : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > axis_V_V_TDATA;
    sc_in< sc_logic > axis_V_V_TVALID;
    sc_out< sc_logic > axis_V_V_TREADY;
    sc_in< sc_lv<13> > loop_count_V;
    sc_in< sc_lv<13> > final_burst_length_V;
    sc_in< sc_lv<13> > val_assign;
    sc_out< sc_lv<9> > cache_V_address0;
    sc_out< sc_logic > cache_V_ce0;
    sc_out< sc_logic > cache_V_we0;
    sc_out< sc_lv<64> > cache_V_d0;
    sc_in< sc_lv<29> > rx_buffer_V_offset;
    sc_out< sc_lv<29> > rx_buffer_V_offset_out_din;
    sc_in< sc_logic > rx_buffer_V_offset_out_full_n;
    sc_out< sc_logic > rx_buffer_V_offset_out_write;
    sc_out< sc_lv<21> > ap_return;


    // Module declarations
    rx_axis_words25(sc_module_name name);
    SC_HAS_PROCESS(rx_axis_words25);

    ~rx_axis_words25();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > axis_V_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond1_i_i_i_fu_358_p2;
    sc_signal< sc_lv<1> > tmp_4_i_i_i_fu_373_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > exitcond1_i_i_i_reg_524;
    sc_signal< sc_lv<1> > tmp_4_i_i_i_reg_533;
    sc_signal< sc_lv<1> > tmp_5_1_i_i_i_reg_547;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<1> > tmp_5_2_i_i_i_reg_561;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<1> > tmp_5_3_i_i_i_reg_575;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<1> > tmp_5_4_i_i_i_reg_589;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_lv<1> > tmp_5_5_i_i_i_reg_603;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_pp0_stage6;
    sc_signal< sc_lv<1> > tmp_5_6_i_i_i_reg_617;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_pp0_stage7;
    sc_signal< sc_lv<1> > tmp_5_7_i_i_i_reg_631;
    sc_signal< sc_logic > rx_buffer_V_offset_out_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > i_i_i_i_reg_146;
    sc_signal< sc_lv<13> > p_098_3_6_i_i_i_reg_212;
    sc_signal< sc_lv<12> > tmp_fu_322_p1;
    sc_signal< sc_lv<12> > tmp_reg_514;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > tmp_i_i_i_fu_340_p2;
    sc_signal< sc_lv<1> > tmp_i_i_i_reg_519;
    sc_signal< bool > ap_predicate_op40_read_state3;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > i_fu_364_p2;
    sc_signal< sc_lv<10> > i_reg_528;
    sc_signal< sc_lv<8> > tmp_V_reg_537;
    sc_signal< sc_lv<13> > data_length_V_1_i_i_s_fu_379_p2;
    sc_signal< sc_lv<1> > tmp_5_1_i_i_i_fu_385_p2;
    sc_signal< sc_lv<13> > data_length_V_1_1_i_s_fu_391_p2;
    sc_signal< sc_lv<13> > data_length_V_1_1_i_s_reg_551;
    sc_signal< bool > ap_predicate_op45_read_state4;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > tmp_5_2_i_i_i_fu_397_p2;
    sc_signal< sc_lv<13> > data_length_V_1_2_i_s_fu_403_p2;
    sc_signal< sc_lv<13> > data_length_V_1_2_i_s_reg_565;
    sc_signal< bool > ap_predicate_op51_read_state5;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<1> > tmp_5_3_i_i_i_fu_409_p2;
    sc_signal< sc_lv<13> > data_length_V_1_3_i_s_fu_415_p2;
    sc_signal< sc_lv<13> > data_length_V_1_3_i_s_reg_579;
    sc_signal< bool > ap_predicate_op57_read_state6;
    sc_signal< bool > ap_block_state6_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<1> > tmp_5_4_i_i_i_fu_421_p2;
    sc_signal< sc_lv<13> > data_length_V_1_4_i_s_fu_427_p2;
    sc_signal< sc_lv<13> > data_length_V_1_4_i_s_reg_593;
    sc_signal< bool > ap_predicate_op63_read_state7;
    sc_signal< bool > ap_block_state7_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<1> > tmp_5_5_i_i_i_fu_433_p2;
    sc_signal< sc_lv<13> > data_length_V_1_5_i_s_fu_439_p2;
    sc_signal< sc_lv<13> > data_length_V_1_5_i_s_reg_607;
    sc_signal< bool > ap_predicate_op69_read_state8;
    sc_signal< bool > ap_block_state8_pp0_stage5_iter0;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<1> > tmp_5_6_i_i_i_fu_445_p2;
    sc_signal< sc_lv<13> > data_length_V_1_6_i_s_fu_451_p2;
    sc_signal< sc_lv<13> > data_length_V_1_6_i_s_reg_621;
    sc_signal< bool > ap_predicate_op75_read_state9;
    sc_signal< bool > ap_block_state9_pp0_stage6_iter0;
    sc_signal< bool > ap_block_pp0_stage6_11001;
    sc_signal< sc_lv<1> > tmp_5_7_i_i_i_fu_457_p2;
    sc_signal< bool > ap_predicate_op80_read_state10;
    sc_signal< bool > ap_block_state10_pp0_stage7_iter0;
    sc_signal< bool > ap_block_pp0_stage7_11001;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage7_subdone;
    sc_signal< sc_lv<10> > ap_phi_mux_i_i_i_i_phi_fu_150_p4;
    sc_signal< sc_lv<13> > ap_phi_mux_p_098_3_1_i_i_i_phi_fu_161_p4;
    sc_signal< sc_lv<13> > ap_phi_reg_pp0_iter0_p_098_3_1_i_i_i_reg_158;
    sc_signal< sc_lv<13> > ap_phi_mux_p_098_3_2_i_i_i_phi_fu_171_p4;
    sc_signal< sc_lv<13> > ap_phi_reg_pp0_iter0_p_098_3_2_i_i_i_reg_168;
    sc_signal< sc_lv<13> > ap_phi_mux_p_098_3_3_i_i_i_phi_fu_182_p4;
    sc_signal< sc_lv<13> > ap_phi_reg_pp0_iter0_p_098_3_3_i_i_i_reg_179;
    sc_signal< sc_lv<13> > ap_phi_mux_p_098_3_4_i_i_i_phi_fu_193_p4;
    sc_signal< sc_lv<13> > ap_phi_reg_pp0_iter0_p_098_3_4_i_i_i_reg_190;
    sc_signal< sc_lv<13> > ap_phi_mux_p_098_3_5_i_i_i_phi_fu_204_p4;
    sc_signal< sc_lv<13> > ap_phi_reg_pp0_iter0_p_098_3_5_i_i_i_reg_201;
    sc_signal< sc_lv<13> > ap_phi_mux_p_098_3_6_i_i_i_phi_fu_215_p4;
    sc_signal< sc_lv<13> > ap_phi_reg_pp0_iter0_p_098_3_6_i_i_i_reg_212;
    sc_signal< sc_lv<13> > ap_phi_mux_p_098_3_7_i_i_i_phi_fu_226_p4;
    sc_signal< sc_lv<13> > data_length_V_1_7_i_s_fu_463_p2;
    sc_signal< sc_lv<13> > ap_phi_reg_pp0_iter0_p_098_3_7_i_i_i_reg_223;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_p_1_1_i_i_i_reg_233;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_p_1_1_i_i_i_reg_233;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_p_1_2_i_i_i_reg_244;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_p_1_2_i_i_i_reg_244;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_p_1_3_i_i_i_reg_255;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_p_1_3_i_i_i_reg_255;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_p_1_4_i_i_i_reg_266;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_p_1_4_i_i_i_reg_266;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_p_1_5_i_i_i_reg_277;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_p_1_5_i_i_i_reg_277;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_p_1_6_i_i_i_reg_288;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_p_1_6_i_i_i_reg_288;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_p_1_7_i_i_i_reg_299;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_p_1_7_i_i_i_reg_299;
    sc_signal< sc_lv<64> > ap_phi_mux_p_094_1_i_i_i_phi_fu_314_p4;
    sc_signal< sc_lv<64> > axi_word_V_7_i_i_i_fu_475_p9;
    sc_signal< sc_lv<64> > tmp_6_i_i_i_fu_495_p1;
    sc_signal< sc_lv<13> > p_098_1_i_i_i_fu_92;
    sc_signal< sc_lv<13> > final_burst_length_V_4_fu_346_p3;
    sc_signal< sc_lv<14> > lhs_V_cast_i_i_i_fu_326_p1;
    sc_signal< sc_lv<14> > tmp_cast_i_i_i_fu_336_p1;
    sc_signal< sc_lv<14> > r_V_fu_330_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_pp0_stage6_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_671;
    sc_signal< bool > ap_condition_677;
    sc_signal< bool > ap_condition_683;
    sc_signal< bool > ap_condition_686;
    sc_signal< bool > ap_condition_681;
    sc_signal< bool > ap_condition_692;
    sc_signal< bool > ap_condition_695;
    sc_signal< bool > ap_condition_699;
    sc_signal< bool > ap_condition_702;
    sc_signal< bool > ap_condition_706;
    sc_signal< bool > ap_condition_709;
    sc_signal< bool > ap_condition_713;
    sc_signal< bool > ap_condition_716;
    sc_signal< bool > ap_condition_180;
    sc_signal< bool > ap_condition_375;
    sc_signal< bool > ap_condition_165;
    sc_signal< bool > ap_condition_361;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_pp0_stage0;
    static const sc_lv<11> ap_ST_fsm_pp0_stage1;
    static const sc_lv<11> ap_ST_fsm_pp0_stage2;
    static const sc_lv<11> ap_ST_fsm_pp0_stage3;
    static const sc_lv<11> ap_ST_fsm_pp0_stage4;
    static const sc_lv<11> ap_ST_fsm_pp0_stage5;
    static const sc_lv<11> ap_ST_fsm_pp0_stage6;
    static const sc_lv<11> ap_ST_fsm_pp0_stage7;
    static const sc_lv<11> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<14> ap_const_lv14_3FFF;
    static const sc_lv<13> ap_const_lv13_1000;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<13> ap_const_lv13_1FFF;
    static const sc_lv<13> ap_const_lv13_1FFE;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_A;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_pp0_stage6();
    void thread_ap_block_pp0_stage6_11001();
    void thread_ap_block_pp0_stage6_subdone();
    void thread_ap_block_pp0_stage7();
    void thread_ap_block_pp0_stage7_11001();
    void thread_ap_block_pp0_stage7_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage7_iter0();
    void thread_ap_block_state11_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage3_iter0();
    void thread_ap_block_state7_pp0_stage4_iter0();
    void thread_ap_block_state8_pp0_stage5_iter0();
    void thread_ap_block_state9_pp0_stage6_iter0();
    void thread_ap_condition_165();
    void thread_ap_condition_180();
    void thread_ap_condition_361();
    void thread_ap_condition_375();
    void thread_ap_condition_671();
    void thread_ap_condition_677();
    void thread_ap_condition_681();
    void thread_ap_condition_683();
    void thread_ap_condition_686();
    void thread_ap_condition_692();
    void thread_ap_condition_695();
    void thread_ap_condition_699();
    void thread_ap_condition_702();
    void thread_ap_condition_706();
    void thread_ap_condition_709();
    void thread_ap_condition_713();
    void thread_ap_condition_716();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_i_i_i_phi_fu_150_p4();
    void thread_ap_phi_mux_p_094_1_i_i_i_phi_fu_314_p4();
    void thread_ap_phi_mux_p_098_3_1_i_i_i_phi_fu_161_p4();
    void thread_ap_phi_mux_p_098_3_2_i_i_i_phi_fu_171_p4();
    void thread_ap_phi_mux_p_098_3_3_i_i_i_phi_fu_182_p4();
    void thread_ap_phi_mux_p_098_3_4_i_i_i_phi_fu_193_p4();
    void thread_ap_phi_mux_p_098_3_5_i_i_i_phi_fu_204_p4();
    void thread_ap_phi_mux_p_098_3_6_i_i_i_phi_fu_215_p4();
    void thread_ap_phi_mux_p_098_3_7_i_i_i_phi_fu_226_p4();
    void thread_ap_phi_reg_pp0_iter0_p_1_7_i_i_i_reg_299();
    void thread_ap_predicate_op40_read_state3();
    void thread_ap_predicate_op45_read_state4();
    void thread_ap_predicate_op51_read_state5();
    void thread_ap_predicate_op57_read_state6();
    void thread_ap_predicate_op63_read_state7();
    void thread_ap_predicate_op69_read_state8();
    void thread_ap_predicate_op75_read_state9();
    void thread_ap_predicate_op80_read_state10();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_axi_word_V_7_i_i_i_fu_475_p9();
    void thread_axis_V_V_TDATA_blk_n();
    void thread_axis_V_V_TREADY();
    void thread_cache_V_address0();
    void thread_cache_V_ce0();
    void thread_cache_V_d0();
    void thread_cache_V_we0();
    void thread_data_length_V_1_1_i_s_fu_391_p2();
    void thread_data_length_V_1_2_i_s_fu_403_p2();
    void thread_data_length_V_1_3_i_s_fu_415_p2();
    void thread_data_length_V_1_4_i_s_fu_427_p2();
    void thread_data_length_V_1_5_i_s_fu_439_p2();
    void thread_data_length_V_1_6_i_s_fu_451_p2();
    void thread_data_length_V_1_7_i_s_fu_463_p2();
    void thread_data_length_V_1_i_i_s_fu_379_p2();
    void thread_exitcond1_i_i_i_fu_358_p2();
    void thread_final_burst_length_V_4_fu_346_p3();
    void thread_i_fu_364_p2();
    void thread_lhs_V_cast_i_i_i_fu_326_p1();
    void thread_r_V_fu_330_p2();
    void thread_rx_buffer_V_offset_out_blk_n();
    void thread_rx_buffer_V_offset_out_din();
    void thread_rx_buffer_V_offset_out_write();
    void thread_tmp_4_i_i_i_fu_373_p2();
    void thread_tmp_5_1_i_i_i_fu_385_p2();
    void thread_tmp_5_2_i_i_i_fu_397_p2();
    void thread_tmp_5_3_i_i_i_fu_409_p2();
    void thread_tmp_5_4_i_i_i_fu_421_p2();
    void thread_tmp_5_5_i_i_i_fu_433_p2();
    void thread_tmp_5_6_i_i_i_fu_445_p2();
    void thread_tmp_5_7_i_i_i_fu_457_p2();
    void thread_tmp_6_i_i_i_fu_495_p1();
    void thread_tmp_cast_i_i_i_fu_336_p1();
    void thread_tmp_fu_322_p1();
    void thread_tmp_i_i_i_fu_340_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
