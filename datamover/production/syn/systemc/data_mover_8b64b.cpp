// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "data_mover_8b64b.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

<<<<<<< HEAD:datamover/production/syn/systemc/data_mover_8b64b.cpp
const sc_logic data_mover_8b64b::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic data_mover_8b64b::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> data_mover_8b64b::ap_ST_fsm_state1 = "1";
const sc_lv<4> data_mover_8b64b::ap_ST_fsm_state2 = "10";
const sc_lv<4> data_mover_8b64b::ap_ST_fsm_state3 = "100";
const sc_lv<4> data_mover_8b64b::ap_ST_fsm_state4 = "1000";
const sc_lv<32> data_mover_8b64b::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> data_mover_8b64b::ap_const_lv1_0 = "0";
const sc_lv<1> data_mover_8b64b::ap_const_lv1_1 = "1";
const sc_lv<2> data_mover_8b64b::ap_const_lv2_0 = "00";
const sc_lv<2> data_mover_8b64b::ap_const_lv2_2 = "10";
const sc_lv<2> data_mover_8b64b::ap_const_lv2_3 = "11";
const sc_lv<2> data_mover_8b64b::ap_const_lv2_1 = "1";
const int data_mover_8b64b::C_S_AXI_DATA_WIDTH = "100000";
const int data_mover_8b64b::C_M_AXI_DMA_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int data_mover_8b64b::C_M_AXI_DMA_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int data_mover_8b64b::C_M_AXI_DMA_CACHE_VALUE = "11";
const int data_mover_8b64b::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> data_mover_8b64b::ap_const_lv32_1 = "1";
const sc_lv<32> data_mover_8b64b::ap_const_lv32_2 = "10";
const bool data_mover_8b64b::ap_const_boolean_0 = false;
const sc_lv<32> data_mover_8b64b::ap_const_lv32_3 = "11";
const sc_lv<32> data_mover_8b64b::ap_const_lv32_1F = "11111";
const sc_lv<12> data_mover_8b64b::ap_const_lv12_0 = "000000000000";
const sc_lv<32> data_mover_8b64b::ap_const_lv32_C = "1100";
const sc_lv<32> data_mover_8b64b::ap_const_lv32_18 = "11000";
const sc_lv<13> data_mover_8b64b::ap_const_lv13_1 = "1";
const sc_lv<13> data_mover_8b64b::ap_const_lv13_1000 = "1000000000000";
const sc_lv<64> data_mover_8b64b::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const bool data_mover_8b64b::ap_const_boolean_1 = true;

data_mover_8b64b::data_mover_8b64b(sc_module_name name) : sc_module(name), mVcdFile(0) {
    data_mover_8b64b_control_s_axi_U = new data_mover_8b64b_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("data_mover_8b64b_control_s_axi_U");
    data_mover_8b64b_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    data_mover_8b64b_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    data_mover_8b64b_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    data_mover_8b64b_control_s_axi_U->WVALID(s_axi_control_WVALID);
    data_mover_8b64b_control_s_axi_U->WREADY(s_axi_control_WREADY);
    data_mover_8b64b_control_s_axi_U->WDATA(s_axi_control_WDATA);
    data_mover_8b64b_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    data_mover_8b64b_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    data_mover_8b64b_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    data_mover_8b64b_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    data_mover_8b64b_control_s_axi_U->RVALID(s_axi_control_RVALID);
    data_mover_8b64b_control_s_axi_U->RREADY(s_axi_control_RREADY);
    data_mover_8b64b_control_s_axi_U->RDATA(s_axi_control_RDATA);
    data_mover_8b64b_control_s_axi_U->RRESP(s_axi_control_RRESP);
    data_mover_8b64b_control_s_axi_U->BVALID(s_axi_control_BVALID);
    data_mover_8b64b_control_s_axi_U->BREADY(s_axi_control_BREADY);
    data_mover_8b64b_control_s_axi_U->BRESP(s_axi_control_BRESP);
    data_mover_8b64b_control_s_axi_U->ACLK(ap_clk);
    data_mover_8b64b_control_s_axi_U->ARESET(ap_rst_n_inv);
    data_mover_8b64b_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    data_mover_8b64b_control_s_axi_U->ap_start(ap_start);
    data_mover_8b64b_control_s_axi_U->interrupt(interrupt);
    data_mover_8b64b_control_s_axi_U->ap_ready(ap_ready);
    data_mover_8b64b_control_s_axi_U->ap_done(ap_done);
    data_mover_8b64b_control_s_axi_U->ap_idle(ap_idle);
    data_mover_8b64b_control_s_axi_U->tx_buffer_V(tx_buffer_V);
    data_mover_8b64b_control_s_axi_U->tx_buffer_length_V(tx_buffer_length_V);
    data_mover_8b64b_control_s_axi_U->rx_buffer_V(rx_buffer_V);
    data_mover_8b64b_control_s_axi_U->rx_buffer_length_V(rx_buffer_length_V);
    data_mover_8b64b_DMA_m_axi_U = new data_mover_8b64b_DMA_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_DMA_ID_WIDTH,C_M_AXI_DMA_ADDR_WIDTH,C_M_AXI_DMA_DATA_WIDTH,C_M_AXI_DMA_AWUSER_WIDTH,C_M_AXI_DMA_ARUSER_WIDTH,C_M_AXI_DMA_WUSER_WIDTH,C_M_AXI_DMA_RUSER_WIDTH,C_M_AXI_DMA_BUSER_WIDTH,C_M_AXI_DMA_USER_VALUE,C_M_AXI_DMA_PROT_VALUE,C_M_AXI_DMA_CACHE_VALUE>("data_mover_8b64b_DMA_m_axi_U");
    data_mover_8b64b_DMA_m_axi_U->AWVALID(m_axi_DMA_AWVALID);
    data_mover_8b64b_DMA_m_axi_U->AWREADY(m_axi_DMA_AWREADY);
    data_mover_8b64b_DMA_m_axi_U->AWADDR(m_axi_DMA_AWADDR);
    data_mover_8b64b_DMA_m_axi_U->AWID(m_axi_DMA_AWID);
    data_mover_8b64b_DMA_m_axi_U->AWLEN(m_axi_DMA_AWLEN);
    data_mover_8b64b_DMA_m_axi_U->AWSIZE(m_axi_DMA_AWSIZE);
    data_mover_8b64b_DMA_m_axi_U->AWBURST(m_axi_DMA_AWBURST);
    data_mover_8b64b_DMA_m_axi_U->AWLOCK(m_axi_DMA_AWLOCK);
    data_mover_8b64b_DMA_m_axi_U->AWCACHE(m_axi_DMA_AWCACHE);
    data_mover_8b64b_DMA_m_axi_U->AWPROT(m_axi_DMA_AWPROT);
    data_mover_8b64b_DMA_m_axi_U->AWQOS(m_axi_DMA_AWQOS);
    data_mover_8b64b_DMA_m_axi_U->AWREGION(m_axi_DMA_AWREGION);
    data_mover_8b64b_DMA_m_axi_U->AWUSER(m_axi_DMA_AWUSER);
    data_mover_8b64b_DMA_m_axi_U->WVALID(m_axi_DMA_WVALID);
    data_mover_8b64b_DMA_m_axi_U->WREADY(m_axi_DMA_WREADY);
    data_mover_8b64b_DMA_m_axi_U->WDATA(m_axi_DMA_WDATA);
    data_mover_8b64b_DMA_m_axi_U->WSTRB(m_axi_DMA_WSTRB);
    data_mover_8b64b_DMA_m_axi_U->WLAST(m_axi_DMA_WLAST);
    data_mover_8b64b_DMA_m_axi_U->WID(m_axi_DMA_WID);
    data_mover_8b64b_DMA_m_axi_U->WUSER(m_axi_DMA_WUSER);
    data_mover_8b64b_DMA_m_axi_U->ARVALID(m_axi_DMA_ARVALID);
    data_mover_8b64b_DMA_m_axi_U->ARREADY(m_axi_DMA_ARREADY);
    data_mover_8b64b_DMA_m_axi_U->ARADDR(m_axi_DMA_ARADDR);
    data_mover_8b64b_DMA_m_axi_U->ARID(m_axi_DMA_ARID);
    data_mover_8b64b_DMA_m_axi_U->ARLEN(m_axi_DMA_ARLEN);
    data_mover_8b64b_DMA_m_axi_U->ARSIZE(m_axi_DMA_ARSIZE);
    data_mover_8b64b_DMA_m_axi_U->ARBURST(m_axi_DMA_ARBURST);
    data_mover_8b64b_DMA_m_axi_U->ARLOCK(m_axi_DMA_ARLOCK);
    data_mover_8b64b_DMA_m_axi_U->ARCACHE(m_axi_DMA_ARCACHE);
    data_mover_8b64b_DMA_m_axi_U->ARPROT(m_axi_DMA_ARPROT);
    data_mover_8b64b_DMA_m_axi_U->ARQOS(m_axi_DMA_ARQOS);
    data_mover_8b64b_DMA_m_axi_U->ARREGION(m_axi_DMA_ARREGION);
    data_mover_8b64b_DMA_m_axi_U->ARUSER(m_axi_DMA_ARUSER);
    data_mover_8b64b_DMA_m_axi_U->RVALID(m_axi_DMA_RVALID);
    data_mover_8b64b_DMA_m_axi_U->RREADY(m_axi_DMA_RREADY);
    data_mover_8b64b_DMA_m_axi_U->RDATA(m_axi_DMA_RDATA);
    data_mover_8b64b_DMA_m_axi_U->RLAST(m_axi_DMA_RLAST);
    data_mover_8b64b_DMA_m_axi_U->RID(m_axi_DMA_RID);
    data_mover_8b64b_DMA_m_axi_U->RUSER(m_axi_DMA_RUSER);
    data_mover_8b64b_DMA_m_axi_U->RRESP(m_axi_DMA_RRESP);
    data_mover_8b64b_DMA_m_axi_U->BVALID(m_axi_DMA_BVALID);
    data_mover_8b64b_DMA_m_axi_U->BREADY(m_axi_DMA_BREADY);
    data_mover_8b64b_DMA_m_axi_U->BRESP(m_axi_DMA_BRESP);
    data_mover_8b64b_DMA_m_axi_U->BID(m_axi_DMA_BID);
    data_mover_8b64b_DMA_m_axi_U->BUSER(m_axi_DMA_BUSER);
    data_mover_8b64b_DMA_m_axi_U->ACLK(ap_clk);
    data_mover_8b64b_DMA_m_axi_U->ARESET(ap_rst_n_inv);
    data_mover_8b64b_DMA_m_axi_U->ACLK_EN(ap_var_for_const0);
    data_mover_8b64b_DMA_m_axi_U->I_ARVALID(DMA_ARVALID);
    data_mover_8b64b_DMA_m_axi_U->I_ARREADY(DMA_ARREADY);
    data_mover_8b64b_DMA_m_axi_U->I_ARADDR(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARADDR);
    data_mover_8b64b_DMA_m_axi_U->I_ARID(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARID);
    data_mover_8b64b_DMA_m_axi_U->I_ARLEN(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARLEN);
    data_mover_8b64b_DMA_m_axi_U->I_ARSIZE(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARSIZE);
    data_mover_8b64b_DMA_m_axi_U->I_ARLOCK(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARLOCK);
    data_mover_8b64b_DMA_m_axi_U->I_ARCACHE(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARCACHE);
    data_mover_8b64b_DMA_m_axi_U->I_ARQOS(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARQOS);
    data_mover_8b64b_DMA_m_axi_U->I_ARPROT(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARPROT);
    data_mover_8b64b_DMA_m_axi_U->I_ARUSER(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARUSER);
    data_mover_8b64b_DMA_m_axi_U->I_ARBURST(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARBURST);
    data_mover_8b64b_DMA_m_axi_U->I_ARREGION(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARREGION);
    data_mover_8b64b_DMA_m_axi_U->I_RVALID(DMA_RVALID);
    data_mover_8b64b_DMA_m_axi_U->I_RREADY(DMA_RREADY);
    data_mover_8b64b_DMA_m_axi_U->I_RDATA(DMA_RDATA);
    data_mover_8b64b_DMA_m_axi_U->I_RID(DMA_RID);
    data_mover_8b64b_DMA_m_axi_U->I_RUSER(DMA_RUSER);
    data_mover_8b64b_DMA_m_axi_U->I_RRESP(DMA_RRESP);
    data_mover_8b64b_DMA_m_axi_U->I_RLAST(DMA_RLAST);
    data_mover_8b64b_DMA_m_axi_U->I_AWVALID(DMA_AWVALID);
    data_mover_8b64b_DMA_m_axi_U->I_AWREADY(DMA_AWREADY);
    data_mover_8b64b_DMA_m_axi_U->I_AWADDR(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWADDR);
    data_mover_8b64b_DMA_m_axi_U->I_AWID(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWID);
    data_mover_8b64b_DMA_m_axi_U->I_AWLEN(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWLEN);
    data_mover_8b64b_DMA_m_axi_U->I_AWSIZE(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWSIZE);
    data_mover_8b64b_DMA_m_axi_U->I_AWLOCK(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWLOCK);
    data_mover_8b64b_DMA_m_axi_U->I_AWCACHE(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWCACHE);
    data_mover_8b64b_DMA_m_axi_U->I_AWQOS(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWQOS);
    data_mover_8b64b_DMA_m_axi_U->I_AWPROT(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWPROT);
    data_mover_8b64b_DMA_m_axi_U->I_AWUSER(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWUSER);
    data_mover_8b64b_DMA_m_axi_U->I_AWBURST(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWBURST);
    data_mover_8b64b_DMA_m_axi_U->I_AWREGION(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWREGION);
    data_mover_8b64b_DMA_m_axi_U->I_WVALID(DMA_WVALID);
    data_mover_8b64b_DMA_m_axi_U->I_WREADY(DMA_WREADY);
    data_mover_8b64b_DMA_m_axi_U->I_WDATA(grp_rx_loop_fu_94_m_axi_rx_buffer_V_WDATA);
    data_mover_8b64b_DMA_m_axi_U->I_WID(grp_rx_loop_fu_94_m_axi_rx_buffer_V_WID);
    data_mover_8b64b_DMA_m_axi_U->I_WUSER(grp_rx_loop_fu_94_m_axi_rx_buffer_V_WUSER);
    data_mover_8b64b_DMA_m_axi_U->I_WLAST(grp_rx_loop_fu_94_m_axi_rx_buffer_V_WLAST);
    data_mover_8b64b_DMA_m_axi_U->I_WSTRB(grp_rx_loop_fu_94_m_axi_rx_buffer_V_WSTRB);
    data_mover_8b64b_DMA_m_axi_U->I_BVALID(DMA_BVALID);
    data_mover_8b64b_DMA_m_axi_U->I_BREADY(DMA_BREADY);
    data_mover_8b64b_DMA_m_axi_U->I_BRESP(DMA_BRESP);
    data_mover_8b64b_DMA_m_axi_U->I_BID(DMA_BID);
    data_mover_8b64b_DMA_m_axi_U->I_BUSER(DMA_BUSER);
    grp_rx_loop_fu_94 = new rx_loop("grp_rx_loop_fu_94");
    grp_rx_loop_fu_94->axis_V_V_TDATA(data_rx_V_V_0_data_out);
    grp_rx_loop_fu_94->loop_count_V(rx_loop_count_V_reg_259);
    grp_rx_loop_fu_94->final_burst_length_V(rx_final_burst_lengt_reg_254);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWVALID(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWVALID);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWREADY(DMA_AWREADY);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWADDR(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWADDR);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWID(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWID);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWLEN(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWLEN);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWSIZE(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWSIZE);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWBURST(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWBURST);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWLOCK(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWLOCK);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWCACHE(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWCACHE);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWPROT(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWPROT);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWQOS(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWQOS);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWREGION(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWREGION);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_AWUSER(grp_rx_loop_fu_94_m_axi_rx_buffer_V_AWUSER);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_WVALID(grp_rx_loop_fu_94_m_axi_rx_buffer_V_WVALID);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_WREADY(DMA_WREADY);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_WDATA(grp_rx_loop_fu_94_m_axi_rx_buffer_V_WDATA);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_WSTRB(grp_rx_loop_fu_94_m_axi_rx_buffer_V_WSTRB);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_WLAST(grp_rx_loop_fu_94_m_axi_rx_buffer_V_WLAST);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_WID(grp_rx_loop_fu_94_m_axi_rx_buffer_V_WID);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_WUSER(grp_rx_loop_fu_94_m_axi_rx_buffer_V_WUSER);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARVALID(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARVALID);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARREADY(ap_var_for_const1);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARADDR(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARADDR);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARID(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARID);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARLEN(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARLEN);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARSIZE(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARSIZE);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARBURST(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARBURST);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARLOCK(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARLOCK);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARCACHE(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARCACHE);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARPROT(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARPROT);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARQOS(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARQOS);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARREGION(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARREGION);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_ARUSER(grp_rx_loop_fu_94_m_axi_rx_buffer_V_ARUSER);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_RVALID(ap_var_for_const1);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_RREADY(grp_rx_loop_fu_94_m_axi_rx_buffer_V_RREADY);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_RDATA(ap_var_for_const2);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_RLAST(ap_var_for_const1);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_RID(ap_var_for_const3);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_RUSER(ap_var_for_const3);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_RRESP(ap_var_for_const4);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_BVALID(DMA_BVALID);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_BREADY(grp_rx_loop_fu_94_m_axi_rx_buffer_V_BREADY);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_BRESP(DMA_BRESP);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_BID(DMA_BID);
    grp_rx_loop_fu_94->m_axi_rx_buffer_V_BUSER(DMA_BUSER);
    grp_rx_loop_fu_94->rx_buffer_V_offset(rx_buffer_V3_reg_234);
    grp_rx_loop_fu_94->ap_clk(ap_clk);
    grp_rx_loop_fu_94->ap_rst(ap_rst_n_inv);
    grp_rx_loop_fu_94->axis_V_V_TVALID(grp_rx_loop_fu_94_axis_V_V_TVALID);
    grp_rx_loop_fu_94->axis_V_V_TREADY(grp_rx_loop_fu_94_axis_V_V_TREADY);
    grp_rx_loop_fu_94->loop_count_V_ap_vld(ap_var_for_const0);
    grp_rx_loop_fu_94->final_burst_length_V_ap_vld(ap_var_for_const0);
    grp_rx_loop_fu_94->rx_buffer_V_offset_ap_vld(ap_var_for_const0);
    grp_rx_loop_fu_94->ap_done(grp_rx_loop_fu_94_ap_done);
    grp_rx_loop_fu_94->ap_start(grp_rx_loop_fu_94_ap_start);
    grp_rx_loop_fu_94->ap_ready(grp_rx_loop_fu_94_ap_ready);
    grp_rx_loop_fu_94->ap_idle(grp_rx_loop_fu_94_ap_idle);
    grp_rx_loop_fu_94->ap_continue(grp_rx_loop_fu_94_ap_continue);
    grp_tx_loop_fu_105 = new tx_loop("grp_tx_loop_fu_105");
    grp_tx_loop_fu_105->axis_V_V_TDATA(grp_tx_loop_fu_105_axis_V_V_TDATA);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWVALID(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWVALID);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWREADY(ap_var_for_const1);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWADDR(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWADDR);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWID(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWID);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWLEN(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWLEN);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWSIZE(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWSIZE);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWBURST(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWBURST);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWLOCK(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWLOCK);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWCACHE(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWCACHE);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWPROT(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWPROT);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWQOS(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWQOS);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWREGION(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWREGION);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_AWUSER(grp_tx_loop_fu_105_m_axi_tx_buffer_V_AWUSER);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_WVALID(grp_tx_loop_fu_105_m_axi_tx_buffer_V_WVALID);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_WREADY(ap_var_for_const1);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_WDATA(grp_tx_loop_fu_105_m_axi_tx_buffer_V_WDATA);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_WSTRB(grp_tx_loop_fu_105_m_axi_tx_buffer_V_WSTRB);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_WLAST(grp_tx_loop_fu_105_m_axi_tx_buffer_V_WLAST);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_WID(grp_tx_loop_fu_105_m_axi_tx_buffer_V_WID);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_WUSER(grp_tx_loop_fu_105_m_axi_tx_buffer_V_WUSER);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARVALID(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARVALID);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARREADY(DMA_ARREADY);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARADDR(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARADDR);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARID(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARID);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARLEN(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARLEN);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARSIZE(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARSIZE);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARBURST(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARBURST);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARLOCK(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARLOCK);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARCACHE(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARCACHE);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARPROT(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARPROT);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARQOS(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARQOS);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARREGION(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARREGION);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_ARUSER(grp_tx_loop_fu_105_m_axi_tx_buffer_V_ARUSER);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_RVALID(DMA_RVALID);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_RREADY(grp_tx_loop_fu_105_m_axi_tx_buffer_V_RREADY);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_RDATA(DMA_RDATA);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_RLAST(DMA_RLAST);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_RID(DMA_RID);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_RUSER(DMA_RUSER);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_RRESP(DMA_RRESP);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_BVALID(ap_var_for_const1);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_BREADY(grp_tx_loop_fu_105_m_axi_tx_buffer_V_BREADY);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_BRESP(ap_var_for_const4);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_BID(ap_var_for_const3);
    grp_tx_loop_fu_105->m_axi_tx_buffer_V_BUSER(ap_var_for_const3);
    grp_tx_loop_fu_105->tx_buffer_V_offset(tx_buffer_V1_reg_239);
    grp_tx_loop_fu_105->loop_count_V(tx_loop_count_V_reg_249);
    grp_tx_loop_fu_105->final_burst_length_V(tx_final_burst_lengt_reg_244);
    grp_tx_loop_fu_105->ap_clk(ap_clk);
    grp_tx_loop_fu_105->ap_rst(ap_rst_n_inv);
    grp_tx_loop_fu_105->tx_buffer_V_offset_ap_vld(ap_var_for_const0);
    grp_tx_loop_fu_105->loop_count_V_ap_vld(ap_var_for_const0);
    grp_tx_loop_fu_105->final_burst_length_V_ap_vld(ap_var_for_const0);
    grp_tx_loop_fu_105->axis_V_V_TVALID(grp_tx_loop_fu_105_axis_V_V_TVALID);
    grp_tx_loop_fu_105->axis_V_V_TREADY(grp_tx_loop_fu_105_axis_V_V_TREADY);
    grp_tx_loop_fu_105->ap_done(grp_tx_loop_fu_105_ap_done);
    grp_tx_loop_fu_105->ap_start(grp_tx_loop_fu_105_ap_start);
    grp_tx_loop_fu_105->ap_ready(grp_tx_loop_fu_105_ap_ready);
    grp_tx_loop_fu_105->ap_idle(grp_tx_loop_fu_105_ap_idle);
    grp_tx_loop_fu_105->ap_continue(grp_tx_loop_fu_105_ap_continue);
=======
const sc_logic data_mover::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic data_mover::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> data_mover::ap_ST_fsm_state1 = "1";
const sc_lv<4> data_mover::ap_ST_fsm_state2 = "10";
const sc_lv<4> data_mover::ap_ST_fsm_state3 = "100";
const sc_lv<4> data_mover::ap_ST_fsm_state4 = "1000";
const sc_lv<32> data_mover::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> data_mover::ap_const_lv1_0 = "0";
const sc_lv<1> data_mover::ap_const_lv1_1 = "1";
const sc_lv<2> data_mover::ap_const_lv2_0 = "00";
const sc_lv<2> data_mover::ap_const_lv2_2 = "10";
const sc_lv<2> data_mover::ap_const_lv2_3 = "11";
const sc_lv<2> data_mover::ap_const_lv2_1 = "1";
const int data_mover::C_S_AXI_DATA_WIDTH = "100000";
const int data_mover::C_M_AXI_DMA_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int data_mover::C_M_AXI_DMA_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int data_mover::C_M_AXI_DMA_CACHE_VALUE = "11";
const int data_mover::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> data_mover::ap_const_lv32_1 = "1";
const sc_lv<32> data_mover::ap_const_lv32_2 = "10";
const bool data_mover::ap_const_boolean_0 = false;
const sc_lv<32> data_mover::ap_const_lv32_3 = "11";
const sc_lv<32> data_mover::ap_const_lv32_1F = "11111";
const sc_lv<12> data_mover::ap_const_lv12_0 = "000000000000";
const sc_lv<32> data_mover::ap_const_lv32_C = "1100";
const sc_lv<32> data_mover::ap_const_lv32_17 = "10111";
const sc_lv<12> data_mover::ap_const_lv12_1 = "1";
const sc_lv<13> data_mover::ap_const_lv13_1000 = "1000000000000";
const sc_lv<64> data_mover::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const bool data_mover::ap_const_boolean_1 = true;

data_mover::data_mover(sc_module_name name) : sc_module(name), mVcdFile(0) {
    data_mover_control_s_axi_U = new data_mover_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("data_mover_control_s_axi_U");
    data_mover_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    data_mover_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    data_mover_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    data_mover_control_s_axi_U->WVALID(s_axi_control_WVALID);
    data_mover_control_s_axi_U->WREADY(s_axi_control_WREADY);
    data_mover_control_s_axi_U->WDATA(s_axi_control_WDATA);
    data_mover_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    data_mover_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    data_mover_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    data_mover_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    data_mover_control_s_axi_U->RVALID(s_axi_control_RVALID);
    data_mover_control_s_axi_U->RREADY(s_axi_control_RREADY);
    data_mover_control_s_axi_U->RDATA(s_axi_control_RDATA);
    data_mover_control_s_axi_U->RRESP(s_axi_control_RRESP);
    data_mover_control_s_axi_U->BVALID(s_axi_control_BVALID);
    data_mover_control_s_axi_U->BREADY(s_axi_control_BREADY);
    data_mover_control_s_axi_U->BRESP(s_axi_control_BRESP);
    data_mover_control_s_axi_U->ACLK(ap_clk);
    data_mover_control_s_axi_U->ARESET(ap_rst_n_inv);
    data_mover_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    data_mover_control_s_axi_U->ap_start(ap_start);
    data_mover_control_s_axi_U->interrupt(interrupt);
    data_mover_control_s_axi_U->ap_ready(ap_ready);
    data_mover_control_s_axi_U->ap_done(ap_done);
    data_mover_control_s_axi_U->ap_idle(ap_idle);
    data_mover_control_s_axi_U->tx_buffer_V(tx_buffer_V);
    data_mover_control_s_axi_U->tx_buffer_length_V(tx_buffer_length_V);
    data_mover_control_s_axi_U->rx_buffer_V(rx_buffer_V);
    data_mover_control_s_axi_U->rx_buffer_length_V(rx_buffer_length_V);
    data_mover_control_s_axi_U->last_buffer_V(current_buffer_V_loa_1_fu_177_p2);
    data_mover_control_s_axi_U->last_buffer_V_ap_vld(last_buffer_V_ap_vld);
    data_mover_control_s_axi_U->increment_buffer_V(increment_buffer_V);
    data_mover_DMA_m_axi_U = new data_mover_DMA_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_DMA_ID_WIDTH,C_M_AXI_DMA_ADDR_WIDTH,C_M_AXI_DMA_DATA_WIDTH,C_M_AXI_DMA_AWUSER_WIDTH,C_M_AXI_DMA_ARUSER_WIDTH,C_M_AXI_DMA_WUSER_WIDTH,C_M_AXI_DMA_RUSER_WIDTH,C_M_AXI_DMA_BUSER_WIDTH,C_M_AXI_DMA_USER_VALUE,C_M_AXI_DMA_PROT_VALUE,C_M_AXI_DMA_CACHE_VALUE>("data_mover_DMA_m_axi_U");
    data_mover_DMA_m_axi_U->AWVALID(m_axi_DMA_AWVALID);
    data_mover_DMA_m_axi_U->AWREADY(m_axi_DMA_AWREADY);
    data_mover_DMA_m_axi_U->AWADDR(m_axi_DMA_AWADDR);
    data_mover_DMA_m_axi_U->AWID(m_axi_DMA_AWID);
    data_mover_DMA_m_axi_U->AWLEN(m_axi_DMA_AWLEN);
    data_mover_DMA_m_axi_U->AWSIZE(m_axi_DMA_AWSIZE);
    data_mover_DMA_m_axi_U->AWBURST(m_axi_DMA_AWBURST);
    data_mover_DMA_m_axi_U->AWLOCK(m_axi_DMA_AWLOCK);
    data_mover_DMA_m_axi_U->AWCACHE(m_axi_DMA_AWCACHE);
    data_mover_DMA_m_axi_U->AWPROT(m_axi_DMA_AWPROT);
    data_mover_DMA_m_axi_U->AWQOS(m_axi_DMA_AWQOS);
    data_mover_DMA_m_axi_U->AWREGION(m_axi_DMA_AWREGION);
    data_mover_DMA_m_axi_U->AWUSER(m_axi_DMA_AWUSER);
    data_mover_DMA_m_axi_U->WVALID(m_axi_DMA_WVALID);
    data_mover_DMA_m_axi_U->WREADY(m_axi_DMA_WREADY);
    data_mover_DMA_m_axi_U->WDATA(m_axi_DMA_WDATA);
    data_mover_DMA_m_axi_U->WSTRB(m_axi_DMA_WSTRB);
    data_mover_DMA_m_axi_U->WLAST(m_axi_DMA_WLAST);
    data_mover_DMA_m_axi_U->WID(m_axi_DMA_WID);
    data_mover_DMA_m_axi_U->WUSER(m_axi_DMA_WUSER);
    data_mover_DMA_m_axi_U->ARVALID(m_axi_DMA_ARVALID);
    data_mover_DMA_m_axi_U->ARREADY(m_axi_DMA_ARREADY);
    data_mover_DMA_m_axi_U->ARADDR(m_axi_DMA_ARADDR);
    data_mover_DMA_m_axi_U->ARID(m_axi_DMA_ARID);
    data_mover_DMA_m_axi_U->ARLEN(m_axi_DMA_ARLEN);
    data_mover_DMA_m_axi_U->ARSIZE(m_axi_DMA_ARSIZE);
    data_mover_DMA_m_axi_U->ARBURST(m_axi_DMA_ARBURST);
    data_mover_DMA_m_axi_U->ARLOCK(m_axi_DMA_ARLOCK);
    data_mover_DMA_m_axi_U->ARCACHE(m_axi_DMA_ARCACHE);
    data_mover_DMA_m_axi_U->ARPROT(m_axi_DMA_ARPROT);
    data_mover_DMA_m_axi_U->ARQOS(m_axi_DMA_ARQOS);
    data_mover_DMA_m_axi_U->ARREGION(m_axi_DMA_ARREGION);
    data_mover_DMA_m_axi_U->ARUSER(m_axi_DMA_ARUSER);
    data_mover_DMA_m_axi_U->RVALID(m_axi_DMA_RVALID);
    data_mover_DMA_m_axi_U->RREADY(m_axi_DMA_RREADY);
    data_mover_DMA_m_axi_U->RDATA(m_axi_DMA_RDATA);
    data_mover_DMA_m_axi_U->RLAST(m_axi_DMA_RLAST);
    data_mover_DMA_m_axi_U->RID(m_axi_DMA_RID);
    data_mover_DMA_m_axi_U->RUSER(m_axi_DMA_RUSER);
    data_mover_DMA_m_axi_U->RRESP(m_axi_DMA_RRESP);
    data_mover_DMA_m_axi_U->BVALID(m_axi_DMA_BVALID);
    data_mover_DMA_m_axi_U->BREADY(m_axi_DMA_BREADY);
    data_mover_DMA_m_axi_U->BRESP(m_axi_DMA_BRESP);
    data_mover_DMA_m_axi_U->BID(m_axi_DMA_BID);
    data_mover_DMA_m_axi_U->BUSER(m_axi_DMA_BUSER);
    data_mover_DMA_m_axi_U->ACLK(ap_clk);
    data_mover_DMA_m_axi_U->ARESET(ap_rst_n_inv);
    data_mover_DMA_m_axi_U->ACLK_EN(ap_var_for_const0);
    data_mover_DMA_m_axi_U->I_ARVALID(DMA_ARVALID);
    data_mover_DMA_m_axi_U->I_ARREADY(DMA_ARREADY);
    data_mover_DMA_m_axi_U->I_ARADDR(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARADDR);
    data_mover_DMA_m_axi_U->I_ARID(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARID);
    data_mover_DMA_m_axi_U->I_ARLEN(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARLEN);
    data_mover_DMA_m_axi_U->I_ARSIZE(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARSIZE);
    data_mover_DMA_m_axi_U->I_ARLOCK(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARLOCK);
    data_mover_DMA_m_axi_U->I_ARCACHE(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARCACHE);
    data_mover_DMA_m_axi_U->I_ARQOS(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARQOS);
    data_mover_DMA_m_axi_U->I_ARPROT(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARPROT);
    data_mover_DMA_m_axi_U->I_ARUSER(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARUSER);
    data_mover_DMA_m_axi_U->I_ARBURST(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARBURST);
    data_mover_DMA_m_axi_U->I_ARREGION(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARREGION);
    data_mover_DMA_m_axi_U->I_RVALID(DMA_RVALID);
    data_mover_DMA_m_axi_U->I_RREADY(DMA_RREADY);
    data_mover_DMA_m_axi_U->I_RDATA(DMA_RDATA);
    data_mover_DMA_m_axi_U->I_RID(DMA_RID);
    data_mover_DMA_m_axi_U->I_RUSER(DMA_RUSER);
    data_mover_DMA_m_axi_U->I_RRESP(DMA_RRESP);
    data_mover_DMA_m_axi_U->I_RLAST(DMA_RLAST);
    data_mover_DMA_m_axi_U->I_AWVALID(DMA_AWVALID);
    data_mover_DMA_m_axi_U->I_AWREADY(DMA_AWREADY);
    data_mover_DMA_m_axi_U->I_AWADDR(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWADDR);
    data_mover_DMA_m_axi_U->I_AWID(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWID);
    data_mover_DMA_m_axi_U->I_AWLEN(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWLEN);
    data_mover_DMA_m_axi_U->I_AWSIZE(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWSIZE);
    data_mover_DMA_m_axi_U->I_AWLOCK(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWLOCK);
    data_mover_DMA_m_axi_U->I_AWCACHE(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWCACHE);
    data_mover_DMA_m_axi_U->I_AWQOS(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWQOS);
    data_mover_DMA_m_axi_U->I_AWPROT(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWPROT);
    data_mover_DMA_m_axi_U->I_AWUSER(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWUSER);
    data_mover_DMA_m_axi_U->I_AWBURST(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWBURST);
    data_mover_DMA_m_axi_U->I_AWREGION(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWREGION);
    data_mover_DMA_m_axi_U->I_WVALID(DMA_WVALID);
    data_mover_DMA_m_axi_U->I_WREADY(DMA_WREADY);
    data_mover_DMA_m_axi_U->I_WDATA(grp_rx_loop_fu_121_m_axi_rx_buffer_V_WDATA);
    data_mover_DMA_m_axi_U->I_WID(grp_rx_loop_fu_121_m_axi_rx_buffer_V_WID);
    data_mover_DMA_m_axi_U->I_WUSER(grp_rx_loop_fu_121_m_axi_rx_buffer_V_WUSER);
    data_mover_DMA_m_axi_U->I_WLAST(grp_rx_loop_fu_121_m_axi_rx_buffer_V_WLAST);
    data_mover_DMA_m_axi_U->I_WSTRB(grp_rx_loop_fu_121_m_axi_rx_buffer_V_WSTRB);
    data_mover_DMA_m_axi_U->I_BVALID(DMA_BVALID);
    data_mover_DMA_m_axi_U->I_BREADY(DMA_BREADY);
    data_mover_DMA_m_axi_U->I_BRESP(DMA_BRESP);
    data_mover_DMA_m_axi_U->I_BID(DMA_BID);
    data_mover_DMA_m_axi_U->I_BUSER(DMA_BUSER);
    grp_rx_loop_fu_121 = new rx_loop("grp_rx_loop_fu_121");
    grp_rx_loop_fu_121->axis_V_V_TDATA(data_rx_V_V_0_data_out);
    grp_rx_loop_fu_121->loop_count_V(rx_loop_count_V_reg_336);
    grp_rx_loop_fu_121->final_burst_length_V(rx_final_burst_lengt_reg_331);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWVALID(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWVALID);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWREADY(DMA_AWREADY);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWADDR(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWADDR);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWID(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWID);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWLEN(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWLEN);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWSIZE(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWSIZE);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWBURST(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWBURST);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWLOCK(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWLOCK);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWCACHE(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWCACHE);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWPROT(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWPROT);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWQOS(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWQOS);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWREGION(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWREGION);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_AWUSER(grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWUSER);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_WVALID(grp_rx_loop_fu_121_m_axi_rx_buffer_V_WVALID);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_WREADY(DMA_WREADY);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_WDATA(grp_rx_loop_fu_121_m_axi_rx_buffer_V_WDATA);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_WSTRB(grp_rx_loop_fu_121_m_axi_rx_buffer_V_WSTRB);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_WLAST(grp_rx_loop_fu_121_m_axi_rx_buffer_V_WLAST);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_WID(grp_rx_loop_fu_121_m_axi_rx_buffer_V_WID);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_WUSER(grp_rx_loop_fu_121_m_axi_rx_buffer_V_WUSER);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARVALID(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARVALID);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARREADY(ap_var_for_const1);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARADDR(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARADDR);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARID(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARID);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARLEN(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARLEN);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARSIZE(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARSIZE);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARBURST(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARBURST);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARLOCK(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARLOCK);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARCACHE(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARCACHE);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARPROT(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARPROT);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARQOS(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARQOS);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARREGION(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARREGION);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_ARUSER(grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARUSER);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_RVALID(ap_var_for_const1);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_RREADY(grp_rx_loop_fu_121_m_axi_rx_buffer_V_RREADY);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_RDATA(ap_var_for_const2);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_RLAST(ap_var_for_const1);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_RID(ap_var_for_const3);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_RUSER(ap_var_for_const3);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_RRESP(ap_var_for_const4);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_BVALID(DMA_BVALID);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_BREADY(grp_rx_loop_fu_121_m_axi_rx_buffer_V_BREADY);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_BRESP(DMA_BRESP);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_BID(DMA_BID);
    grp_rx_loop_fu_121->m_axi_rx_buffer_V_BUSER(DMA_BUSER);
    grp_rx_loop_fu_121->rx_buffer_V_offset(rx_buffer_V3_reg_305);
    grp_rx_loop_fu_121->rx_buffer_V_offset1(current_buffer_V_loa_1_reg_315);
    grp_rx_loop_fu_121->ap_clk(ap_clk);
    grp_rx_loop_fu_121->ap_rst(ap_rst_n_inv);
    grp_rx_loop_fu_121->axis_V_V_TVALID(grp_rx_loop_fu_121_axis_V_V_TVALID);
    grp_rx_loop_fu_121->axis_V_V_TREADY(grp_rx_loop_fu_121_axis_V_V_TREADY);
    grp_rx_loop_fu_121->loop_count_V_ap_vld(ap_var_for_const0);
    grp_rx_loop_fu_121->final_burst_length_V_ap_vld(ap_var_for_const0);
    grp_rx_loop_fu_121->rx_buffer_V_offset_ap_vld(ap_var_for_const0);
    grp_rx_loop_fu_121->rx_buffer_V_offset1_ap_vld(ap_var_for_const0);
    grp_rx_loop_fu_121->ap_done(grp_rx_loop_fu_121_ap_done);
    grp_rx_loop_fu_121->ap_start(grp_rx_loop_fu_121_ap_start);
    grp_rx_loop_fu_121->ap_ready(grp_rx_loop_fu_121_ap_ready);
    grp_rx_loop_fu_121->ap_idle(grp_rx_loop_fu_121_ap_idle);
    grp_rx_loop_fu_121->ap_continue(grp_rx_loop_fu_121_ap_continue);
    grp_tx_loop_fu_133 = new tx_loop("grp_tx_loop_fu_133");
    grp_tx_loop_fu_133->axis_V_V_TDATA(grp_tx_loop_fu_133_axis_V_V_TDATA);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWVALID(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWVALID);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWREADY(ap_var_for_const1);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWADDR(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWADDR);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWID(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWID);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWLEN(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWLEN);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWSIZE(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWSIZE);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWBURST(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWBURST);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWLOCK(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWLOCK);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWCACHE(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWCACHE);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWPROT(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWPROT);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWQOS(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWQOS);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWREGION(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWREGION);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_AWUSER(grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWUSER);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_WVALID(grp_tx_loop_fu_133_m_axi_tx_buffer_V_WVALID);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_WREADY(ap_var_for_const1);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_WDATA(grp_tx_loop_fu_133_m_axi_tx_buffer_V_WDATA);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_WSTRB(grp_tx_loop_fu_133_m_axi_tx_buffer_V_WSTRB);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_WLAST(grp_tx_loop_fu_133_m_axi_tx_buffer_V_WLAST);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_WID(grp_tx_loop_fu_133_m_axi_tx_buffer_V_WID);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_WUSER(grp_tx_loop_fu_133_m_axi_tx_buffer_V_WUSER);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARVALID(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARVALID);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARREADY(DMA_ARREADY);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARADDR(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARADDR);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARID(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARID);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARLEN(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARLEN);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARSIZE(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARSIZE);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARBURST(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARBURST);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARLOCK(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARLOCK);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARCACHE(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARCACHE);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARPROT(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARPROT);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARQOS(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARQOS);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARREGION(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARREGION);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_ARUSER(grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARUSER);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_RVALID(DMA_RVALID);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_RREADY(grp_tx_loop_fu_133_m_axi_tx_buffer_V_RREADY);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_RDATA(DMA_RDATA);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_RLAST(DMA_RLAST);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_RID(DMA_RID);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_RUSER(DMA_RUSER);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_RRESP(DMA_RRESP);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_BVALID(ap_var_for_const1);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_BREADY(grp_tx_loop_fu_133_m_axi_tx_buffer_V_BREADY);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_BRESP(ap_var_for_const4);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_BID(ap_var_for_const3);
    grp_tx_loop_fu_133->m_axi_tx_buffer_V_BUSER(ap_var_for_const3);
    grp_tx_loop_fu_133->tx_buffer_V_offset(tx_buffer_V1_reg_310);
    grp_tx_loop_fu_133->tx_buffer_V_offset1(current_buffer_V_loa_1_reg_315);
    grp_tx_loop_fu_133->loop_count_V(tx_loop_count_V_reg_326);
    grp_tx_loop_fu_133->final_burst_length_V(tx_final_burst_lengt_reg_321);
    grp_tx_loop_fu_133->ap_clk(ap_clk);
    grp_tx_loop_fu_133->ap_rst(ap_rst_n_inv);
    grp_tx_loop_fu_133->tx_buffer_V_offset_ap_vld(ap_var_for_const0);
    grp_tx_loop_fu_133->tx_buffer_V_offset1_ap_vld(ap_var_for_const0);
    grp_tx_loop_fu_133->loop_count_V_ap_vld(ap_var_for_const0);
    grp_tx_loop_fu_133->final_burst_length_V_ap_vld(ap_var_for_const0);
    grp_tx_loop_fu_133->axis_V_V_TVALID(grp_tx_loop_fu_133_axis_V_V_TVALID);
    grp_tx_loop_fu_133->axis_V_V_TREADY(grp_tx_loop_fu_133_axis_V_V_TREADY);
    grp_tx_loop_fu_133->ap_done(grp_tx_loop_fu_133_ap_done);
    grp_tx_loop_fu_133->ap_start(grp_tx_loop_fu_133_ap_start);
    grp_tx_loop_fu_133->ap_ready(grp_tx_loop_fu_133_ap_ready);
    grp_tx_loop_fu_133->ap_idle(grp_tx_loop_fu_133_ap_idle);
    grp_tx_loop_fu_133->ap_continue(grp_tx_loop_fu_133_ap_continue);
>>>>>>> master:datamover/production/syn/systemc/data_mover.cpp

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_DMA_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_DMA_AWVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_DMA_BREADY);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rx_loop_fu_121_m_axi_rx_buffer_V_BREADY );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_DMA_RREADY);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_tx_loop_fu_133_m_axi_tx_buffer_V_RREADY );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_DMA_WVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rx_loop_fu_121_m_axi_rx_buffer_V_WVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state3_on_subcall_done);
    sensitive << ( ap_sync_grp_tx_loop_fu_133_ap_ready );
    sensitive << ( ap_sync_grp_tx_loop_fu_133_ap_done );
    sensitive << ( ap_sync_grp_rx_loop_fu_121_ap_ready );
    sensitive << ( ap_sync_grp_rx_loop_fu_121_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( data_tx_V_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( data_tx_V_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_grp_rx_loop_fu_121_ap_done);
    sensitive << ( grp_rx_loop_fu_121_ap_done );
    sensitive << ( ap_sync_reg_grp_rx_loop_fu_121_ap_done );

    SC_METHOD(thread_ap_sync_grp_rx_loop_fu_121_ap_ready);
    sensitive << ( grp_rx_loop_fu_121_ap_ready );
    sensitive << ( ap_sync_reg_grp_rx_loop_fu_121_ap_ready );

    SC_METHOD(thread_ap_sync_grp_tx_loop_fu_133_ap_done);
    sensitive << ( grp_tx_loop_fu_133_ap_done );
    sensitive << ( ap_sync_reg_grp_tx_loop_fu_133_ap_done );

    SC_METHOD(thread_ap_sync_grp_tx_loop_fu_133_ap_ready);
    sensitive << ( grp_tx_loop_fu_133_ap_ready );
    sensitive << ( ap_sync_reg_grp_tx_loop_fu_133_ap_ready );

    SC_METHOD(thread_current_buffer_V_loa_1_fu_177_p2);
    sensitive << ( increment_buffer_V );
    sensitive << ( current_buffer_V );

    SC_METHOD(thread_data_rx_V_V_0_ack_in);
    sensitive << ( data_rx_V_V_0_state );

    SC_METHOD(thread_data_rx_V_V_0_ack_out);
    sensitive << ( grp_rx_loop_fu_121_axis_V_V_TREADY );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_data_rx_V_V_0_data_out);
    sensitive << ( data_rx_V_V_0_payload_A );
    sensitive << ( data_rx_V_V_0_payload_B );
    sensitive << ( data_rx_V_V_0_sel );

    SC_METHOD(thread_data_rx_V_V_0_load_A);
    sensitive << ( data_rx_V_V_0_sel_wr );
    sensitive << ( data_rx_V_V_0_state_cmp_full );

    SC_METHOD(thread_data_rx_V_V_0_load_B);
    sensitive << ( data_rx_V_V_0_sel_wr );
    sensitive << ( data_rx_V_V_0_state_cmp_full );

    SC_METHOD(thread_data_rx_V_V_0_sel);
    sensitive << ( data_rx_V_V_0_sel_rd );

    SC_METHOD(thread_data_rx_V_V_0_state_cmp_full);
    sensitive << ( data_rx_V_V_0_state );

    SC_METHOD(thread_data_rx_V_V_0_vld_in);
    sensitive << ( data_rx_V_V_TVALID );

    SC_METHOD(thread_data_rx_V_V_0_vld_out);
    sensitive << ( data_rx_V_V_0_state );

    SC_METHOD(thread_data_rx_V_V_TREADY);
    sensitive << ( data_rx_V_V_0_state );

    SC_METHOD(thread_data_tx_V_V_1_ack_in);
    sensitive << ( data_tx_V_V_1_state );

    SC_METHOD(thread_data_tx_V_V_1_ack_out);
    sensitive << ( data_tx_V_V_TREADY );

    SC_METHOD(thread_data_tx_V_V_1_data_out);
    sensitive << ( data_tx_V_V_1_payload_A );
    sensitive << ( data_tx_V_V_1_payload_B );
    sensitive << ( data_tx_V_V_1_sel );

    SC_METHOD(thread_data_tx_V_V_1_load_A);
    sensitive << ( data_tx_V_V_1_sel_wr );
    sensitive << ( data_tx_V_V_1_state_cmp_full );

    SC_METHOD(thread_data_tx_V_V_1_load_B);
    sensitive << ( data_tx_V_V_1_sel_wr );
    sensitive << ( data_tx_V_V_1_state_cmp_full );

    SC_METHOD(thread_data_tx_V_V_1_sel);
    sensitive << ( data_tx_V_V_1_sel_rd );

    SC_METHOD(thread_data_tx_V_V_1_state_cmp_full);
    sensitive << ( data_tx_V_V_1_state );

    SC_METHOD(thread_data_tx_V_V_1_vld_in);
    sensitive << ( grp_tx_loop_fu_133_axis_V_V_TVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_data_tx_V_V_1_vld_out);
    sensitive << ( data_tx_V_V_1_state );

    SC_METHOD(thread_data_tx_V_V_TDATA);
    sensitive << ( data_tx_V_V_1_data_out );

    SC_METHOD(thread_data_tx_V_V_TVALID);
    sensitive << ( data_tx_V_V_1_state );

    SC_METHOD(thread_grp_rx_loop_fu_121_ap_continue);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );

    SC_METHOD(thread_grp_rx_loop_fu_121_ap_start);
    sensitive << ( grp_rx_loop_fu_121_ap_start_reg );

    SC_METHOD(thread_grp_rx_loop_fu_121_axis_V_V_TVALID);
    sensitive << ( data_rx_V_V_0_state );

    SC_METHOD(thread_grp_tx_loop_fu_133_ap_continue);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );

    SC_METHOD(thread_grp_tx_loop_fu_133_ap_start);
    sensitive << ( grp_tx_loop_fu_133_ap_start_reg );

    SC_METHOD(thread_grp_tx_loop_fu_133_axis_V_V_TREADY);
    sensitive << ( data_tx_V_V_1_state );

    SC_METHOD(thread_last_buffer_V_ap_vld);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_not_increment_buffer_fu_171_p2);
    sensitive << ( increment_buffer_V );

    SC_METHOD(thread_not_s_12_fu_294_p2);
    sensitive << ( increment_buffer_V );
    sensitive << ( not_s_fu_282_p2 );

    SC_METHOD(thread_not_s_fu_282_p2);
    sensitive << ( current_buffer_V_loa_1_fu_177_p2 );

    SC_METHOD(thread_p_s_fu_288_p2);
    sensitive << ( increment_buffer_V );
    sensitive << ( not_increment_buffer_fu_171_p2 );

    SC_METHOD(thread_r_V_1_fu_234_p1);
    sensitive << ( rx_buffer_length_V );

    SC_METHOD(thread_r_V_fu_186_p1);
    sensitive << ( tx_buffer_length_V );

    SC_METHOD(thread_rx_final_burst_lengt_fu_264_p3);
    sensitive << ( tmp_i1_fu_238_p2 );
    sensitive << ( tmp_6_i19_cast_fu_254_p1 );

    SC_METHOD(thread_rx_loop_count_V_fu_273_p3);
    sensitive << ( tmp_4_i1_fu_244_p4 );
    sensitive << ( tmp_i1_fu_238_p2 );
    sensitive << ( tmp_9_i1_fu_258_p2 );

    SC_METHOD(thread_tmp_4_i1_fu_244_p4);
    sensitive << ( rx_buffer_length_V );

    SC_METHOD(thread_tmp_4_i_fu_196_p4);
    sensitive << ( tx_buffer_length_V );

    SC_METHOD(thread_tmp_6_i19_cast_fu_254_p1);
    sensitive << ( r_V_1_fu_234_p1 );

    SC_METHOD(thread_tmp_6_i_cast_fu_206_p1);
    sensitive << ( r_V_fu_186_p1 );

    SC_METHOD(thread_tmp_9_i1_fu_258_p2);
    sensitive << ( tmp_4_i1_fu_244_p4 );

    SC_METHOD(thread_tmp_9_i_fu_210_p2);
    sensitive << ( tmp_4_i_fu_196_p4 );

    SC_METHOD(thread_tmp_i1_fu_238_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_V_1_fu_234_p1 );

    SC_METHOD(thread_tmp_i_fu_190_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_V_fu_186_p1 );

    SC_METHOD(thread_tx_final_burst_lengt_fu_216_p3);
    sensitive << ( tmp_i_fu_190_p2 );
    sensitive << ( tmp_6_i_cast_fu_206_p1 );

    SC_METHOD(thread_tx_loop_count_V_fu_225_p3);
    sensitive << ( tmp_4_i_fu_196_p4 );
    sensitive << ( tmp_i_fu_190_p2 );
    sensitive << ( tmp_9_i_fu_210_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_tx_V_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( ap_CS_fsm_state4 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "0001";
    data_rx_V_V_0_sel_rd = SC_LOGIC_0;
    data_rx_V_V_0_sel_wr = SC_LOGIC_0;
    data_rx_V_V_0_state = "00";
    data_tx_V_V_1_sel_rd = SC_LOGIC_0;
    data_tx_V_V_1_sel_wr = SC_LOGIC_0;
    data_tx_V_V_1_state = "00";
    current_buffer_V = "0";
    grp_rx_loop_fu_121_ap_start_reg = SC_LOGIC_0;
    ap_sync_reg_grp_rx_loop_fu_121_ap_ready = SC_LOGIC_0;
    ap_sync_reg_grp_rx_loop_fu_121_ap_done = SC_LOGIC_0;
    grp_tx_loop_fu_133_ap_start_reg = SC_LOGIC_0;
    ap_sync_reg_grp_tx_loop_fu_133_ap_ready = SC_LOGIC_0;
    ap_sync_reg_grp_tx_loop_fu_133_ap_done = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "data_mover_8b64b_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_DMA_AWVALID, "(port)m_axi_DMA_AWVALID");
    sc_trace(mVcdFile, m_axi_DMA_AWREADY, "(port)m_axi_DMA_AWREADY");
    sc_trace(mVcdFile, m_axi_DMA_AWADDR, "(port)m_axi_DMA_AWADDR");
    sc_trace(mVcdFile, m_axi_DMA_AWID, "(port)m_axi_DMA_AWID");
    sc_trace(mVcdFile, m_axi_DMA_AWLEN, "(port)m_axi_DMA_AWLEN");
    sc_trace(mVcdFile, m_axi_DMA_AWSIZE, "(port)m_axi_DMA_AWSIZE");
    sc_trace(mVcdFile, m_axi_DMA_AWBURST, "(port)m_axi_DMA_AWBURST");
    sc_trace(mVcdFile, m_axi_DMA_AWLOCK, "(port)m_axi_DMA_AWLOCK");
    sc_trace(mVcdFile, m_axi_DMA_AWCACHE, "(port)m_axi_DMA_AWCACHE");
    sc_trace(mVcdFile, m_axi_DMA_AWPROT, "(port)m_axi_DMA_AWPROT");
    sc_trace(mVcdFile, m_axi_DMA_AWQOS, "(port)m_axi_DMA_AWQOS");
    sc_trace(mVcdFile, m_axi_DMA_AWREGION, "(port)m_axi_DMA_AWREGION");
    sc_trace(mVcdFile, m_axi_DMA_AWUSER, "(port)m_axi_DMA_AWUSER");
    sc_trace(mVcdFile, m_axi_DMA_WVALID, "(port)m_axi_DMA_WVALID");
    sc_trace(mVcdFile, m_axi_DMA_WREADY, "(port)m_axi_DMA_WREADY");
    sc_trace(mVcdFile, m_axi_DMA_WDATA, "(port)m_axi_DMA_WDATA");
    sc_trace(mVcdFile, m_axi_DMA_WSTRB, "(port)m_axi_DMA_WSTRB");
    sc_trace(mVcdFile, m_axi_DMA_WLAST, "(port)m_axi_DMA_WLAST");
    sc_trace(mVcdFile, m_axi_DMA_WID, "(port)m_axi_DMA_WID");
    sc_trace(mVcdFile, m_axi_DMA_WUSER, "(port)m_axi_DMA_WUSER");
    sc_trace(mVcdFile, m_axi_DMA_ARVALID, "(port)m_axi_DMA_ARVALID");
    sc_trace(mVcdFile, m_axi_DMA_ARREADY, "(port)m_axi_DMA_ARREADY");
    sc_trace(mVcdFile, m_axi_DMA_ARADDR, "(port)m_axi_DMA_ARADDR");
    sc_trace(mVcdFile, m_axi_DMA_ARID, "(port)m_axi_DMA_ARID");
    sc_trace(mVcdFile, m_axi_DMA_ARLEN, "(port)m_axi_DMA_ARLEN");
    sc_trace(mVcdFile, m_axi_DMA_ARSIZE, "(port)m_axi_DMA_ARSIZE");
    sc_trace(mVcdFile, m_axi_DMA_ARBURST, "(port)m_axi_DMA_ARBURST");
    sc_trace(mVcdFile, m_axi_DMA_ARLOCK, "(port)m_axi_DMA_ARLOCK");
    sc_trace(mVcdFile, m_axi_DMA_ARCACHE, "(port)m_axi_DMA_ARCACHE");
    sc_trace(mVcdFile, m_axi_DMA_ARPROT, "(port)m_axi_DMA_ARPROT");
    sc_trace(mVcdFile, m_axi_DMA_ARQOS, "(port)m_axi_DMA_ARQOS");
    sc_trace(mVcdFile, m_axi_DMA_ARREGION, "(port)m_axi_DMA_ARREGION");
    sc_trace(mVcdFile, m_axi_DMA_ARUSER, "(port)m_axi_DMA_ARUSER");
    sc_trace(mVcdFile, m_axi_DMA_RVALID, "(port)m_axi_DMA_RVALID");
    sc_trace(mVcdFile, m_axi_DMA_RREADY, "(port)m_axi_DMA_RREADY");
    sc_trace(mVcdFile, m_axi_DMA_RDATA, "(port)m_axi_DMA_RDATA");
    sc_trace(mVcdFile, m_axi_DMA_RLAST, "(port)m_axi_DMA_RLAST");
    sc_trace(mVcdFile, m_axi_DMA_RID, "(port)m_axi_DMA_RID");
    sc_trace(mVcdFile, m_axi_DMA_RUSER, "(port)m_axi_DMA_RUSER");
    sc_trace(mVcdFile, m_axi_DMA_RRESP, "(port)m_axi_DMA_RRESP");
    sc_trace(mVcdFile, m_axi_DMA_BVALID, "(port)m_axi_DMA_BVALID");
    sc_trace(mVcdFile, m_axi_DMA_BREADY, "(port)m_axi_DMA_BREADY");
    sc_trace(mVcdFile, m_axi_DMA_BRESP, "(port)m_axi_DMA_BRESP");
    sc_trace(mVcdFile, m_axi_DMA_BID, "(port)m_axi_DMA_BID");
    sc_trace(mVcdFile, m_axi_DMA_BUSER, "(port)m_axi_DMA_BUSER");
    sc_trace(mVcdFile, data_rx_V_V_TDATA, "(port)data_rx_V_V_TDATA");
    sc_trace(mVcdFile, data_rx_V_V_TVALID, "(port)data_rx_V_V_TVALID");
    sc_trace(mVcdFile, data_rx_V_V_TREADY, "(port)data_rx_V_V_TREADY");
    sc_trace(mVcdFile, data_tx_V_V_TDATA, "(port)data_tx_V_V_TDATA");
    sc_trace(mVcdFile, data_tx_V_V_TVALID, "(port)data_tx_V_V_TVALID");
    sc_trace(mVcdFile, data_tx_V_V_TREADY, "(port)data_tx_V_V_TREADY");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, data_rx_V_V_0_data_out, "data_rx_V_V_0_data_out");
    sc_trace(mVcdFile, data_rx_V_V_0_vld_in, "data_rx_V_V_0_vld_in");
    sc_trace(mVcdFile, data_rx_V_V_0_vld_out, "data_rx_V_V_0_vld_out");
    sc_trace(mVcdFile, data_rx_V_V_0_ack_in, "data_rx_V_V_0_ack_in");
    sc_trace(mVcdFile, data_rx_V_V_0_ack_out, "data_rx_V_V_0_ack_out");
    sc_trace(mVcdFile, data_rx_V_V_0_payload_A, "data_rx_V_V_0_payload_A");
    sc_trace(mVcdFile, data_rx_V_V_0_payload_B, "data_rx_V_V_0_payload_B");
    sc_trace(mVcdFile, data_rx_V_V_0_sel_rd, "data_rx_V_V_0_sel_rd");
    sc_trace(mVcdFile, data_rx_V_V_0_sel_wr, "data_rx_V_V_0_sel_wr");
    sc_trace(mVcdFile, data_rx_V_V_0_sel, "data_rx_V_V_0_sel");
    sc_trace(mVcdFile, data_rx_V_V_0_load_A, "data_rx_V_V_0_load_A");
    sc_trace(mVcdFile, data_rx_V_V_0_load_B, "data_rx_V_V_0_load_B");
    sc_trace(mVcdFile, data_rx_V_V_0_state, "data_rx_V_V_0_state");
    sc_trace(mVcdFile, data_rx_V_V_0_state_cmp_full, "data_rx_V_V_0_state_cmp_full");
    sc_trace(mVcdFile, data_tx_V_V_1_data_out, "data_tx_V_V_1_data_out");
    sc_trace(mVcdFile, data_tx_V_V_1_vld_in, "data_tx_V_V_1_vld_in");
    sc_trace(mVcdFile, data_tx_V_V_1_vld_out, "data_tx_V_V_1_vld_out");
    sc_trace(mVcdFile, data_tx_V_V_1_ack_in, "data_tx_V_V_1_ack_in");
    sc_trace(mVcdFile, data_tx_V_V_1_ack_out, "data_tx_V_V_1_ack_out");
    sc_trace(mVcdFile, data_tx_V_V_1_payload_A, "data_tx_V_V_1_payload_A");
    sc_trace(mVcdFile, data_tx_V_V_1_payload_B, "data_tx_V_V_1_payload_B");
    sc_trace(mVcdFile, data_tx_V_V_1_sel_rd, "data_tx_V_V_1_sel_rd");
    sc_trace(mVcdFile, data_tx_V_V_1_sel_wr, "data_tx_V_V_1_sel_wr");
    sc_trace(mVcdFile, data_tx_V_V_1_sel, "data_tx_V_V_1_sel");
    sc_trace(mVcdFile, data_tx_V_V_1_load_A, "data_tx_V_V_1_load_A");
    sc_trace(mVcdFile, data_tx_V_V_1_load_B, "data_tx_V_V_1_load_B");
    sc_trace(mVcdFile, data_tx_V_V_1_state, "data_tx_V_V_1_state");
    sc_trace(mVcdFile, data_tx_V_V_1_state_cmp_full, "data_tx_V_V_1_state_cmp_full");
    sc_trace(mVcdFile, tx_buffer_V, "tx_buffer_V");
    sc_trace(mVcdFile, tx_buffer_length_V, "tx_buffer_length_V");
    sc_trace(mVcdFile, rx_buffer_V, "rx_buffer_V");
    sc_trace(mVcdFile, rx_buffer_length_V, "rx_buffer_length_V");
    sc_trace(mVcdFile, last_buffer_V_ap_vld, "last_buffer_V_ap_vld");
    sc_trace(mVcdFile, increment_buffer_V, "increment_buffer_V");
    sc_trace(mVcdFile, current_buffer_V, "current_buffer_V");
    sc_trace(mVcdFile, DMA_AWVALID, "DMA_AWVALID");
    sc_trace(mVcdFile, DMA_AWREADY, "DMA_AWREADY");
    sc_trace(mVcdFile, DMA_WVALID, "DMA_WVALID");
    sc_trace(mVcdFile, DMA_WREADY, "DMA_WREADY");
    sc_trace(mVcdFile, DMA_ARVALID, "DMA_ARVALID");
    sc_trace(mVcdFile, DMA_ARREADY, "DMA_ARREADY");
    sc_trace(mVcdFile, DMA_RVALID, "DMA_RVALID");
    sc_trace(mVcdFile, DMA_RREADY, "DMA_RREADY");
    sc_trace(mVcdFile, DMA_RDATA, "DMA_RDATA");
    sc_trace(mVcdFile, DMA_RLAST, "DMA_RLAST");
    sc_trace(mVcdFile, DMA_RID, "DMA_RID");
    sc_trace(mVcdFile, DMA_RUSER, "DMA_RUSER");
    sc_trace(mVcdFile, DMA_RRESP, "DMA_RRESP");
    sc_trace(mVcdFile, DMA_BVALID, "DMA_BVALID");
    sc_trace(mVcdFile, DMA_BREADY, "DMA_BREADY");
    sc_trace(mVcdFile, DMA_BRESP, "DMA_BRESP");
    sc_trace(mVcdFile, DMA_BID, "DMA_BID");
    sc_trace(mVcdFile, DMA_BUSER, "DMA_BUSER");
    sc_trace(mVcdFile, rx_buffer_V3_reg_305, "rx_buffer_V3_reg_305");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tx_buffer_V1_reg_310, "tx_buffer_V1_reg_310");
    sc_trace(mVcdFile, current_buffer_V_loa_1_fu_177_p2, "current_buffer_V_loa_1_fu_177_p2");
    sc_trace(mVcdFile, current_buffer_V_loa_1_reg_315, "current_buffer_V_loa_1_reg_315");
    sc_trace(mVcdFile, tx_final_burst_lengt_fu_216_p3, "tx_final_burst_lengt_fu_216_p3");
    sc_trace(mVcdFile, tx_final_burst_lengt_reg_321, "tx_final_burst_lengt_reg_321");
    sc_trace(mVcdFile, tx_loop_count_V_fu_225_p3, "tx_loop_count_V_fu_225_p3");
    sc_trace(mVcdFile, tx_loop_count_V_reg_326, "tx_loop_count_V_reg_326");
    sc_trace(mVcdFile, rx_final_burst_lengt_fu_264_p3, "rx_final_burst_lengt_fu_264_p3");
    sc_trace(mVcdFile, rx_final_burst_lengt_reg_331, "rx_final_burst_lengt_reg_331");
    sc_trace(mVcdFile, rx_loop_count_V_fu_273_p3, "rx_loop_count_V_fu_273_p3");
    sc_trace(mVcdFile, rx_loop_count_V_reg_336, "rx_loop_count_V_reg_336");
    sc_trace(mVcdFile, p_s_fu_288_p2, "p_s_fu_288_p2");
    sc_trace(mVcdFile, p_s_reg_341, "p_s_reg_341");
    sc_trace(mVcdFile, not_s_12_fu_294_p2, "not_s_12_fu_294_p2");
    sc_trace(mVcdFile, not_s_12_reg_345, "not_s_12_reg_345");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWVALID, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWVALID");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWADDR, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWADDR");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWID, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWID");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWLEN, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWLEN");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWSIZE, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWSIZE");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWBURST, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWBURST");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWLOCK, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWLOCK");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWCACHE, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWCACHE");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWPROT, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWPROT");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWQOS, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWQOS");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWREGION, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWREGION");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWUSER, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWUSER");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_WVALID, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_WVALID");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_WDATA, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_WDATA");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_WSTRB, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_WSTRB");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_WLAST, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_WLAST");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_WID, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_WID");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_WUSER, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_WUSER");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARVALID, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARVALID");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARADDR, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARADDR");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARID, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARID");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARLEN, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARLEN");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARSIZE, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARSIZE");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARBURST, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARBURST");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARLOCK, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARLOCK");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARCACHE, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARCACHE");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARPROT, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARPROT");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARQOS, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARQOS");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARREGION, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARREGION");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARUSER, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_ARUSER");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_RREADY, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_RREADY");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_m_axi_rx_buffer_V_BREADY, "grp_rx_loop_fu_121_m_axi_rx_buffer_V_BREADY");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_axis_V_V_TVALID, "grp_rx_loop_fu_121_axis_V_V_TVALID");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_axis_V_V_TREADY, "grp_rx_loop_fu_121_axis_V_V_TREADY");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_ap_done, "grp_rx_loop_fu_121_ap_done");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_ap_start, "grp_rx_loop_fu_121_ap_start");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_ap_ready, "grp_rx_loop_fu_121_ap_ready");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_ap_idle, "grp_rx_loop_fu_121_ap_idle");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_ap_continue, "grp_rx_loop_fu_121_ap_continue");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_axis_V_V_TDATA, "grp_tx_loop_fu_133_axis_V_V_TDATA");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWVALID, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWVALID");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWADDR, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWADDR");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWID, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWID");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWLEN, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWLEN");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWSIZE, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWSIZE");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWBURST, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWBURST");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWLOCK, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWLOCK");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWCACHE, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWCACHE");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWPROT, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWPROT");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWQOS, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWQOS");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWREGION, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWREGION");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWUSER, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_AWUSER");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_WVALID, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_WVALID");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_WDATA, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_WDATA");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_WSTRB, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_WSTRB");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_WLAST, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_WLAST");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_WID, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_WID");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_WUSER, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_WUSER");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARVALID, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARVALID");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARADDR, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARADDR");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARID, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARID");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARLEN, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARLEN");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARSIZE, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARSIZE");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARBURST, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARBURST");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARLOCK, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARLOCK");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARCACHE, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARCACHE");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARPROT, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARPROT");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARQOS, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARQOS");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARREGION, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARREGION");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARUSER, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARUSER");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_RREADY, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_RREADY");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_m_axi_tx_buffer_V_BREADY, "grp_tx_loop_fu_133_m_axi_tx_buffer_V_BREADY");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_axis_V_V_TVALID, "grp_tx_loop_fu_133_axis_V_V_TVALID");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_axis_V_V_TREADY, "grp_tx_loop_fu_133_axis_V_V_TREADY");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_ap_done, "grp_tx_loop_fu_133_ap_done");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_ap_start, "grp_tx_loop_fu_133_ap_start");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_ap_ready, "grp_tx_loop_fu_133_ap_ready");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_ap_idle, "grp_tx_loop_fu_133_ap_idle");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_ap_continue, "grp_tx_loop_fu_133_ap_continue");
    sc_trace(mVcdFile, grp_rx_loop_fu_121_ap_start_reg, "grp_rx_loop_fu_121_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_sync_grp_tx_loop_fu_133_ap_ready, "ap_sync_grp_tx_loop_fu_133_ap_ready");
    sc_trace(mVcdFile, ap_sync_grp_tx_loop_fu_133_ap_done, "ap_sync_grp_tx_loop_fu_133_ap_done");
    sc_trace(mVcdFile, ap_sync_grp_rx_loop_fu_121_ap_ready, "ap_sync_grp_rx_loop_fu_121_ap_ready");
    sc_trace(mVcdFile, ap_sync_grp_rx_loop_fu_121_ap_done, "ap_sync_grp_rx_loop_fu_121_ap_done");
    sc_trace(mVcdFile, ap_block_state3_on_subcall_done, "ap_block_state3_on_subcall_done");
    sc_trace(mVcdFile, ap_sync_reg_grp_rx_loop_fu_121_ap_ready, "ap_sync_reg_grp_rx_loop_fu_121_ap_ready");
    sc_trace(mVcdFile, ap_sync_reg_grp_rx_loop_fu_121_ap_done, "ap_sync_reg_grp_rx_loop_fu_121_ap_done");
    sc_trace(mVcdFile, grp_tx_loop_fu_133_ap_start_reg, "grp_tx_loop_fu_133_ap_start_reg");
    sc_trace(mVcdFile, ap_sync_reg_grp_tx_loop_fu_133_ap_ready, "ap_sync_reg_grp_tx_loop_fu_133_ap_ready");
    sc_trace(mVcdFile, ap_sync_reg_grp_tx_loop_fu_133_ap_done, "ap_sync_reg_grp_tx_loop_fu_133_ap_done");
    sc_trace(mVcdFile, r_V_fu_186_p1, "r_V_fu_186_p1");
    sc_trace(mVcdFile, tmp_4_i_fu_196_p4, "tmp_4_i_fu_196_p4");
    sc_trace(mVcdFile, tmp_i_fu_190_p2, "tmp_i_fu_190_p2");
    sc_trace(mVcdFile, tmp_6_i_cast_fu_206_p1, "tmp_6_i_cast_fu_206_p1");
    sc_trace(mVcdFile, tmp_9_i_fu_210_p2, "tmp_9_i_fu_210_p2");
    sc_trace(mVcdFile, r_V_1_fu_234_p1, "r_V_1_fu_234_p1");
    sc_trace(mVcdFile, tmp_4_i1_fu_244_p4, "tmp_4_i1_fu_244_p4");
    sc_trace(mVcdFile, tmp_i1_fu_238_p2, "tmp_i1_fu_238_p2");
    sc_trace(mVcdFile, tmp_6_i19_cast_fu_254_p1, "tmp_6_i19_cast_fu_254_p1");
    sc_trace(mVcdFile, tmp_9_i1_fu_258_p2, "tmp_9_i1_fu_258_p2");
    sc_trace(mVcdFile, not_increment_buffer_fu_171_p2, "not_increment_buffer_fu_171_p2");
    sc_trace(mVcdFile, not_s_fu_282_p2, "not_s_fu_282_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("data_mover_8b64b.hdltvin.dat");
    mHdltvoutHandle.open("data_mover_8b64b.hdltvout.dat");
}

data_mover_8b64b::~data_mover_8b64b() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
<<<<<<< HEAD:datamover/production/syn/systemc/data_mover_8b64b.cpp
    delete data_mover_8b64b_control_s_axi_U;
    delete data_mover_8b64b_DMA_m_axi_U;
    delete grp_rx_loop_fu_94;
    delete grp_tx_loop_fu_105;
=======
    delete data_mover_control_s_axi_U;
    delete data_mover_DMA_m_axi_U;
    delete grp_rx_loop_fu_121;
    delete grp_tx_loop_fu_133;
>>>>>>> master:datamover/production/syn/systemc/data_mover.cpp
}

void data_mover_8b64b::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void data_mover_8b64b::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void data_mover_8b64b::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void data_mover_8b64b::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void data_mover_8b64b::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_0;
}

void data_mover_8b64b::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_grp_rx_loop_fu_121_ap_done = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
            ap_sync_reg_grp_rx_loop_fu_121_ap_done = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_rx_loop_fu_121_ap_done.read())) {
            ap_sync_reg_grp_rx_loop_fu_121_ap_done = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_grp_rx_loop_fu_121_ap_ready = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
            ap_sync_reg_grp_rx_loop_fu_121_ap_ready = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_rx_loop_fu_121_ap_ready.read())) {
            ap_sync_reg_grp_rx_loop_fu_121_ap_ready = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_grp_tx_loop_fu_133_ap_done = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
            ap_sync_reg_grp_tx_loop_fu_133_ap_done = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_tx_loop_fu_133_ap_done.read())) {
            ap_sync_reg_grp_tx_loop_fu_133_ap_done = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_grp_tx_loop_fu_133_ap_ready = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
            ap_sync_reg_grp_tx_loop_fu_133_ap_ready = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_tx_loop_fu_133_ap_ready.read())) {
            ap_sync_reg_grp_tx_loop_fu_133_ap_ready = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        current_buffer_V = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, p_s_reg_341.read()))) {
            current_buffer_V = not_s_12_reg_345.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_rx_V_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_vld_out.read()))) {
            data_rx_V_V_0_sel_rd =  (sc_logic) (~data_rx_V_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_rx_V_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_ack_in.read()))) {
            data_rx_V_V_0_sel_wr =  (sc_logic) (~data_rx_V_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_rx_V_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_rx_V_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(data_rx_V_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_rx_V_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(data_rx_V_V_0_state.read(), ap_const_lv2_2)))) {
            data_rx_V_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_rx_V_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data_rx_V_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_rx_V_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data_rx_V_V_0_state.read(), ap_const_lv2_1)))) {
            data_rx_V_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(data_rx_V_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data_rx_V_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(data_rx_V_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_rx_V_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_rx_V_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_ack_out.read()))))) {
            data_rx_V_V_0_state = ap_const_lv2_3;
        } else {
            data_rx_V_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_tx_V_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_vld_out.read()))) {
            data_tx_V_V_1_sel_rd =  (sc_logic) (~data_tx_V_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_tx_V_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_ack_in.read()))) {
            data_tx_V_V_1_sel_wr =  (sc_logic) (~data_tx_V_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_tx_V_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_tx_V_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_tx_V_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_tx_V_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_tx_V_V_1_state.read())))) {
            data_tx_V_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_tx_V_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_tx_V_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_tx_V_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_tx_V_V_1_state.read())))) {
            data_tx_V_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_tx_V_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_tx_V_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_tx_V_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_tx_V_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_tx_V_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_ack_out.read()))))) {
            data_tx_V_V_1_state = ap_const_lv2_3;
        } else {
            data_tx_V_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_rx_loop_fu_121_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_grp_rx_loop_fu_121_ap_ready.read())))) {
            grp_rx_loop_fu_121_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_rx_loop_fu_121_ap_ready.read())) {
            grp_rx_loop_fu_121_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_tx_loop_fu_133_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_grp_tx_loop_fu_133_ap_ready.read())))) {
            grp_tx_loop_fu_133_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_tx_loop_fu_133_ap_ready.read())) {
            grp_tx_loop_fu_133_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        current_buffer_V_loa_1_reg_315 = current_buffer_V_loa_1_fu_177_p2.read();
        not_s_12_reg_345 = not_s_12_fu_294_p2.read();
        p_s_reg_341 = p_s_fu_288_p2.read();
        rx_buffer_V3_reg_305 = rx_buffer_V.read().range(31, 3);
        rx_final_burst_lengt_reg_331 = rx_final_burst_lengt_fu_264_p3.read();
        rx_loop_count_V_reg_336 = rx_loop_count_V_fu_273_p3.read();
        tx_buffer_V1_reg_310 = tx_buffer_V.read().range(31, 3);
        tx_final_burst_lengt_reg_321 = tx_final_burst_lengt_fu_216_p3.read();
        tx_loop_count_V_reg_326 = tx_loop_count_V_fu_225_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_load_A.read())) {
        data_rx_V_V_0_payload_A = data_rx_V_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_load_B.read())) {
        data_rx_V_V_0_payload_B = data_rx_V_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_load_A.read())) {
        data_tx_V_V_1_payload_A = grp_tx_loop_fu_133_axis_V_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_load_B.read())) {
        data_tx_V_V_1_payload_B = grp_tx_loop_fu_133_axis_V_V_TDATA.read();
    }
}

void data_mover_8b64b::thread_DMA_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        DMA_ARVALID = grp_tx_loop_fu_133_m_axi_tx_buffer_V_ARVALID.read();
    } else {
        DMA_ARVALID = ap_const_logic_0;
    }
}

void data_mover_8b64b::thread_DMA_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        DMA_AWVALID = grp_rx_loop_fu_121_m_axi_rx_buffer_V_AWVALID.read();
    } else {
        DMA_AWVALID = ap_const_logic_0;
    }
}

void data_mover_8b64b::thread_DMA_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        DMA_BREADY = grp_rx_loop_fu_121_m_axi_rx_buffer_V_BREADY.read();
    } else {
        DMA_BREADY = ap_const_logic_0;
    }
}

void data_mover_8b64b::thread_DMA_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        DMA_RREADY = grp_tx_loop_fu_133_m_axi_tx_buffer_V_RREADY.read();
    } else {
        DMA_RREADY = ap_const_logic_0;
    }
}

void data_mover_8b64b::thread_DMA_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        DMA_WVALID = grp_rx_loop_fu_121_m_axi_rx_buffer_V_WVALID.read();
    } else {
        DMA_WVALID = ap_const_logic_0;
    }
}

void data_mover_8b64b::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void data_mover_8b64b::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void data_mover_8b64b::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void data_mover_8b64b::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

<<<<<<< HEAD:datamover/production/syn/systemc/data_mover_8b64b.cpp
void data_mover_8b64b::thread_ap_block_state3_on_subcall_done() {
    ap_block_state3_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, (ap_sync_grp_tx_loop_fu_105_ap_ready.read() & 
  ap_sync_grp_tx_loop_fu_105_ap_done.read())) || esl_seteq<1,1,1>(ap_const_logic_0, (ap_sync_grp_rx_loop_fu_94_ap_ready.read() & 
  ap_sync_grp_rx_loop_fu_94_ap_done.read())));
=======
void data_mover::thread_ap_block_state3_on_subcall_done() {
    ap_block_state3_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, (ap_sync_grp_tx_loop_fu_133_ap_ready.read() & 
  ap_sync_grp_tx_loop_fu_133_ap_done.read())) || esl_seteq<1,1,1>(ap_const_logic_0, (ap_sync_grp_rx_loop_fu_121_ap_ready.read() & 
  ap_sync_grp_rx_loop_fu_121_ap_done.read())));
>>>>>>> master:datamover/production/syn/systemc/data_mover.cpp
}

void data_mover_8b64b::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(data_tx_V_V_1_ack_in.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void data_mover_8b64b::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void data_mover_8b64b::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(data_tx_V_V_1_ack_in.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void data_mover_8b64b::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

<<<<<<< HEAD:datamover/production/syn/systemc/data_mover_8b64b.cpp
void data_mover_8b64b::thread_ap_sync_grp_rx_loop_fu_94_ap_done() {
    ap_sync_grp_rx_loop_fu_94_ap_done = (grp_rx_loop_fu_94_ap_done.read() | ap_sync_reg_grp_rx_loop_fu_94_ap_done.read());
}

void data_mover_8b64b::thread_ap_sync_grp_rx_loop_fu_94_ap_ready() {
    ap_sync_grp_rx_loop_fu_94_ap_ready = (grp_rx_loop_fu_94_ap_ready.read() | ap_sync_reg_grp_rx_loop_fu_94_ap_ready.read());
}

void data_mover_8b64b::thread_ap_sync_grp_tx_loop_fu_105_ap_done() {
    ap_sync_grp_tx_loop_fu_105_ap_done = (grp_tx_loop_fu_105_ap_done.read() | ap_sync_reg_grp_tx_loop_fu_105_ap_done.read());
}

void data_mover_8b64b::thread_ap_sync_grp_tx_loop_fu_105_ap_ready() {
    ap_sync_grp_tx_loop_fu_105_ap_ready = (grp_tx_loop_fu_105_ap_ready.read() | ap_sync_reg_grp_tx_loop_fu_105_ap_ready.read());
=======
void data_mover::thread_ap_sync_grp_rx_loop_fu_121_ap_done() {
    ap_sync_grp_rx_loop_fu_121_ap_done = (grp_rx_loop_fu_121_ap_done.read() | ap_sync_reg_grp_rx_loop_fu_121_ap_done.read());
}

void data_mover::thread_ap_sync_grp_rx_loop_fu_121_ap_ready() {
    ap_sync_grp_rx_loop_fu_121_ap_ready = (grp_rx_loop_fu_121_ap_ready.read() | ap_sync_reg_grp_rx_loop_fu_121_ap_ready.read());
}

void data_mover::thread_ap_sync_grp_tx_loop_fu_133_ap_done() {
    ap_sync_grp_tx_loop_fu_133_ap_done = (grp_tx_loop_fu_133_ap_done.read() | ap_sync_reg_grp_tx_loop_fu_133_ap_done.read());
}

void data_mover::thread_ap_sync_grp_tx_loop_fu_133_ap_ready() {
    ap_sync_grp_tx_loop_fu_133_ap_ready = (grp_tx_loop_fu_133_ap_ready.read() | ap_sync_reg_grp_tx_loop_fu_133_ap_ready.read());
}

void data_mover::thread_current_buffer_V_loa_1_fu_177_p2() {
    current_buffer_V_loa_1_fu_177_p2 = (increment_buffer_V.read() & current_buffer_V.read());
>>>>>>> master:datamover/production/syn/systemc/data_mover.cpp
}

void data_mover_8b64b::thread_data_rx_V_V_0_ack_in() {
    data_rx_V_V_0_ack_in = data_rx_V_V_0_state.read()[1];
}

void data_mover_8b64b::thread_data_rx_V_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        data_rx_V_V_0_ack_out = grp_rx_loop_fu_121_axis_V_V_TREADY.read();
    } else {
        data_rx_V_V_0_ack_out = ap_const_logic_0;
    }
}

void data_mover_8b64b::thread_data_rx_V_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_rx_V_V_0_sel.read())) {
        data_rx_V_V_0_data_out = data_rx_V_V_0_payload_B.read();
    } else {
        data_rx_V_V_0_data_out = data_rx_V_V_0_payload_A.read();
    }
}

void data_mover_8b64b::thread_data_rx_V_V_0_load_A() {
    data_rx_V_V_0_load_A = (data_rx_V_V_0_state_cmp_full.read() & ~data_rx_V_V_0_sel_wr.read());
}

void data_mover_8b64b::thread_data_rx_V_V_0_load_B() {
    data_rx_V_V_0_load_B = (data_rx_V_V_0_sel_wr.read() & data_rx_V_V_0_state_cmp_full.read());
}

void data_mover_8b64b::thread_data_rx_V_V_0_sel() {
    data_rx_V_V_0_sel = data_rx_V_V_0_sel_rd.read();
}

void data_mover_8b64b::thread_data_rx_V_V_0_state_cmp_full() {
    data_rx_V_V_0_state_cmp_full =  (sc_logic) ((!data_rx_V_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_rx_V_V_0_state.read() != ap_const_lv2_1))[0];
}

void data_mover_8b64b::thread_data_rx_V_V_0_vld_in() {
    data_rx_V_V_0_vld_in = data_rx_V_V_TVALID.read();
}

void data_mover_8b64b::thread_data_rx_V_V_0_vld_out() {
    data_rx_V_V_0_vld_out = data_rx_V_V_0_state.read()[0];
}

void data_mover_8b64b::thread_data_rx_V_V_TREADY() {
    data_rx_V_V_TREADY = data_rx_V_V_0_state.read()[1];
}

void data_mover_8b64b::thread_data_tx_V_V_1_ack_in() {
    data_tx_V_V_1_ack_in = data_tx_V_V_1_state.read()[1];
}

void data_mover_8b64b::thread_data_tx_V_V_1_ack_out() {
    data_tx_V_V_1_ack_out = data_tx_V_V_TREADY.read();
}

void data_mover_8b64b::thread_data_tx_V_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_tx_V_V_1_sel.read())) {
        data_tx_V_V_1_data_out = data_tx_V_V_1_payload_B.read();
    } else {
        data_tx_V_V_1_data_out = data_tx_V_V_1_payload_A.read();
    }
}

void data_mover_8b64b::thread_data_tx_V_V_1_load_A() {
    data_tx_V_V_1_load_A = (data_tx_V_V_1_state_cmp_full.read() & ~data_tx_V_V_1_sel_wr.read());
}

void data_mover_8b64b::thread_data_tx_V_V_1_load_B() {
    data_tx_V_V_1_load_B = (data_tx_V_V_1_sel_wr.read() & data_tx_V_V_1_state_cmp_full.read());
}

void data_mover_8b64b::thread_data_tx_V_V_1_sel() {
    data_tx_V_V_1_sel = data_tx_V_V_1_sel_rd.read();
}

void data_mover_8b64b::thread_data_tx_V_V_1_state_cmp_full() {
    data_tx_V_V_1_state_cmp_full =  (sc_logic) ((!data_tx_V_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_tx_V_V_1_state.read() != ap_const_lv2_1))[0];
}

<<<<<<< HEAD:datamover/production/syn/systemc/data_mover_8b64b.cpp
void data_mover_8b64b::thread_data_tx_V_V_1_vld_in() {
    data_tx_V_V_1_vld_in = grp_tx_loop_fu_105_axis_V_V_TVALID.read();
=======
void data_mover::thread_data_tx_V_V_1_vld_in() {
    data_tx_V_V_1_vld_in = grp_tx_loop_fu_133_axis_V_V_TVALID.read();
>>>>>>> master:datamover/production/syn/systemc/data_mover.cpp
}

void data_mover_8b64b::thread_data_tx_V_V_1_vld_out() {
    data_tx_V_V_1_vld_out = data_tx_V_V_1_state.read()[0];
}

void data_mover_8b64b::thread_data_tx_V_V_TDATA() {
    data_tx_V_V_TDATA = data_tx_V_V_1_data_out.read();
}

void data_mover_8b64b::thread_data_tx_V_V_TVALID() {
    data_tx_V_V_TVALID = data_tx_V_V_1_state.read()[0];
}

<<<<<<< HEAD:datamover/production/syn/systemc/data_mover_8b64b.cpp
void data_mover_8b64b::thread_grp_rx_loop_fu_94_ap_continue() {
=======
void data_mover::thread_grp_rx_loop_fu_121_ap_continue() {
>>>>>>> master:datamover/production/syn/systemc/data_mover.cpp
    if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        grp_rx_loop_fu_121_ap_continue = ap_const_logic_1;
    } else {
        grp_rx_loop_fu_121_ap_continue = ap_const_logic_0;
    }
}

<<<<<<< HEAD:datamover/production/syn/systemc/data_mover_8b64b.cpp
void data_mover_8b64b::thread_grp_rx_loop_fu_94_ap_start() {
    grp_rx_loop_fu_94_ap_start = grp_rx_loop_fu_94_ap_start_reg.read();
}

void data_mover_8b64b::thread_grp_rx_loop_fu_94_axis_V_V_TVALID() {
    grp_rx_loop_fu_94_axis_V_V_TVALID = data_rx_V_V_0_state.read()[0];
}

void data_mover_8b64b::thread_grp_tx_loop_fu_105_ap_continue() {
=======
void data_mover::thread_grp_rx_loop_fu_121_ap_start() {
    grp_rx_loop_fu_121_ap_start = grp_rx_loop_fu_121_ap_start_reg.read();
}

void data_mover::thread_grp_rx_loop_fu_121_axis_V_V_TVALID() {
    grp_rx_loop_fu_121_axis_V_V_TVALID = data_rx_V_V_0_state.read()[0];
}

void data_mover::thread_grp_tx_loop_fu_133_ap_continue() {
>>>>>>> master:datamover/production/syn/systemc/data_mover.cpp
    if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        grp_tx_loop_fu_133_ap_continue = ap_const_logic_1;
    } else {
        grp_tx_loop_fu_133_ap_continue = ap_const_logic_0;
    }
}

<<<<<<< HEAD:datamover/production/syn/systemc/data_mover_8b64b.cpp
void data_mover_8b64b::thread_grp_tx_loop_fu_105_ap_start() {
    grp_tx_loop_fu_105_ap_start = grp_tx_loop_fu_105_ap_start_reg.read();
}

void data_mover_8b64b::thread_grp_tx_loop_fu_105_axis_V_V_TREADY() {
    grp_tx_loop_fu_105_axis_V_V_TREADY = data_tx_V_V_1_state.read()[1];
}

void data_mover_8b64b::thread_r_V_1_fu_186_p1() {
    r_V_1_fu_186_p1 = rx_buffer_length_V.read().range(12-1, 0);
}

void data_mover_8b64b::thread_r_V_fu_138_p1() {
    r_V_fu_138_p1 = tx_buffer_length_V.read().range(12-1, 0);
}

void data_mover_8b64b::thread_rx_final_burst_lengt_fu_216_p3() {
    rx_final_burst_lengt_fu_216_p3 = (!tmp_i1_fu_190_p2.read()[0].is_01())? sc_lv<13>(): ((tmp_i1_fu_190_p2.read()[0].to_bool())? ap_const_lv13_1000: tmp_6_i16_cast_fu_206_p1.read());
}

void data_mover_8b64b::thread_rx_loop_count_V_fu_225_p3() {
    rx_loop_count_V_fu_225_p3 = (!tmp_i1_fu_190_p2.read()[0].is_01())? sc_lv<13>(): ((tmp_i1_fu_190_p2.read()[0].to_bool())? tmp_4_i1_fu_196_p4.read(): tmp_9_i1_fu_210_p2.read());
}

void data_mover_8b64b::thread_tmp_4_i1_fu_196_p4() {
    tmp_4_i1_fu_196_p4 = rx_buffer_length_V.read().range(24, 12);
}

void data_mover_8b64b::thread_tmp_4_i_fu_148_p4() {
    tmp_4_i_fu_148_p4 = tx_buffer_length_V.read().range(24, 12);
}

void data_mover_8b64b::thread_tmp_6_i16_cast_fu_206_p1() {
    tmp_6_i16_cast_fu_206_p1 = esl_zext<13,12>(r_V_1_fu_186_p1.read());
}

void data_mover_8b64b::thread_tmp_6_i_cast_fu_158_p1() {
    tmp_6_i_cast_fu_158_p1 = esl_zext<13,12>(r_V_fu_138_p1.read());
}

void data_mover_8b64b::thread_tmp_9_i1_fu_210_p2() {
    tmp_9_i1_fu_210_p2 = (!ap_const_lv13_1.is_01() || !tmp_4_i1_fu_196_p4.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_1) + sc_biguint<13>(tmp_4_i1_fu_196_p4.read()));
}

void data_mover_8b64b::thread_tmp_9_i_fu_162_p2() {
    tmp_9_i_fu_162_p2 = (!ap_const_lv13_1.is_01() || !tmp_4_i_fu_148_p4.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_1) + sc_biguint<13>(tmp_4_i_fu_148_p4.read()));
}

void data_mover_8b64b::thread_tmp_i1_fu_190_p2() {
    tmp_i1_fu_190_p2 = (!r_V_1_fu_186_p1.read().is_01() || !ap_const_lv12_0.is_01())? sc_lv<1>(): sc_lv<1>(r_V_1_fu_186_p1.read() == ap_const_lv12_0);
}

void data_mover_8b64b::thread_tmp_i_fu_142_p2() {
    tmp_i_fu_142_p2 = (!r_V_fu_138_p1.read().is_01() || !ap_const_lv12_0.is_01())? sc_lv<1>(): sc_lv<1>(r_V_fu_138_p1.read() == ap_const_lv12_0);
}

void data_mover_8b64b::thread_tx_final_burst_lengt_fu_168_p3() {
    tx_final_burst_lengt_fu_168_p3 = (!tmp_i_fu_142_p2.read()[0].is_01())? sc_lv<13>(): ((tmp_i_fu_142_p2.read()[0].to_bool())? ap_const_lv13_1000: tmp_6_i_cast_fu_158_p1.read());
}

void data_mover_8b64b::thread_tx_loop_count_V_fu_177_p3() {
    tx_loop_count_V_fu_177_p3 = (!tmp_i_fu_142_p2.read()[0].is_01())? sc_lv<13>(): ((tmp_i_fu_142_p2.read()[0].to_bool())? tmp_4_i_fu_148_p4.read(): tmp_9_i_fu_162_p2.read());
=======
void data_mover::thread_grp_tx_loop_fu_133_ap_start() {
    grp_tx_loop_fu_133_ap_start = grp_tx_loop_fu_133_ap_start_reg.read();
}

void data_mover::thread_grp_tx_loop_fu_133_axis_V_V_TREADY() {
    grp_tx_loop_fu_133_axis_V_V_TREADY = data_tx_V_V_1_state.read()[1];
}

void data_mover::thread_last_buffer_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        last_buffer_V_ap_vld = ap_const_logic_1;
    } else {
        last_buffer_V_ap_vld = ap_const_logic_0;
    }
}

void data_mover::thread_not_increment_buffer_fu_171_p2() {
    not_increment_buffer_fu_171_p2 = (increment_buffer_V.read() ^ ap_const_lv1_1);
}

void data_mover::thread_not_s_12_fu_294_p2() {
    not_s_12_fu_294_p2 = (increment_buffer_V.read() & not_s_fu_282_p2.read());
}

void data_mover::thread_not_s_fu_282_p2() {
    not_s_fu_282_p2 = (current_buffer_V_loa_1_fu_177_p2.read() ^ ap_const_lv1_1);
}

void data_mover::thread_p_s_fu_288_p2() {
    p_s_fu_288_p2 = (increment_buffer_V.read() | not_increment_buffer_fu_171_p2.read());
}

void data_mover::thread_r_V_1_fu_234_p1() {
    r_V_1_fu_234_p1 = rx_buffer_length_V.read().range(12-1, 0);
}

void data_mover::thread_r_V_fu_186_p1() {
    r_V_fu_186_p1 = tx_buffer_length_V.read().range(12-1, 0);
}

void data_mover::thread_rx_final_burst_lengt_fu_264_p3() {
    rx_final_burst_lengt_fu_264_p3 = (!tmp_i1_fu_238_p2.read()[0].is_01())? sc_lv<13>(): ((tmp_i1_fu_238_p2.read()[0].to_bool())? ap_const_lv13_1000: tmp_6_i19_cast_fu_254_p1.read());
}

void data_mover::thread_rx_loop_count_V_fu_273_p3() {
    rx_loop_count_V_fu_273_p3 = (!tmp_i1_fu_238_p2.read()[0].is_01())? sc_lv<12>(): ((tmp_i1_fu_238_p2.read()[0].to_bool())? tmp_4_i1_fu_244_p4.read(): tmp_9_i1_fu_258_p2.read());
}

void data_mover::thread_tmp_4_i1_fu_244_p4() {
    tmp_4_i1_fu_244_p4 = rx_buffer_length_V.read().range(23, 12);
}

void data_mover::thread_tmp_4_i_fu_196_p4() {
    tmp_4_i_fu_196_p4 = tx_buffer_length_V.read().range(23, 12);
}

void data_mover::thread_tmp_6_i19_cast_fu_254_p1() {
    tmp_6_i19_cast_fu_254_p1 = esl_zext<13,12>(r_V_1_fu_234_p1.read());
}

void data_mover::thread_tmp_6_i_cast_fu_206_p1() {
    tmp_6_i_cast_fu_206_p1 = esl_zext<13,12>(r_V_fu_186_p1.read());
}

void data_mover::thread_tmp_9_i1_fu_258_p2() {
    tmp_9_i1_fu_258_p2 = (!ap_const_lv12_1.is_01() || !tmp_4_i1_fu_244_p4.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_1) + sc_biguint<12>(tmp_4_i1_fu_244_p4.read()));
}

void data_mover::thread_tmp_9_i_fu_210_p2() {
    tmp_9_i_fu_210_p2 = (!ap_const_lv12_1.is_01() || !tmp_4_i_fu_196_p4.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_1) + sc_biguint<12>(tmp_4_i_fu_196_p4.read()));
}

void data_mover::thread_tmp_i1_fu_238_p2() {
    tmp_i1_fu_238_p2 = (!r_V_1_fu_234_p1.read().is_01() || !ap_const_lv12_0.is_01())? sc_lv<1>(): sc_lv<1>(r_V_1_fu_234_p1.read() == ap_const_lv12_0);
}

void data_mover::thread_tmp_i_fu_190_p2() {
    tmp_i_fu_190_p2 = (!r_V_fu_186_p1.read().is_01() || !ap_const_lv12_0.is_01())? sc_lv<1>(): sc_lv<1>(r_V_fu_186_p1.read() == ap_const_lv12_0);
}

void data_mover::thread_tx_final_burst_lengt_fu_216_p3() {
    tx_final_burst_lengt_fu_216_p3 = (!tmp_i_fu_190_p2.read()[0].is_01())? sc_lv<13>(): ((tmp_i_fu_190_p2.read()[0].to_bool())? ap_const_lv13_1000: tmp_6_i_cast_fu_206_p1.read());
}

void data_mover::thread_tx_loop_count_V_fu_225_p3() {
    tx_loop_count_V_fu_225_p3 = (!tmp_i_fu_190_p2.read()[0].is_01())? sc_lv<12>(): ((tmp_i_fu_190_p2.read()[0].to_bool())? tmp_4_i_fu_196_p4.read(): tmp_9_i_fu_210_p2.read());
>>>>>>> master:datamover/production/syn/systemc/data_mover.cpp
}

void data_mover_8b64b::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(data_tx_V_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void data_mover_8b64b::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_DMA_AWVALID\" :  \"" << m_axi_DMA_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_AWREADY\" :  \"" << m_axi_DMA_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_AWADDR\" :  \"" << m_axi_DMA_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_AWID\" :  \"" << m_axi_DMA_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_AWLEN\" :  \"" << m_axi_DMA_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_AWSIZE\" :  \"" << m_axi_DMA_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_AWBURST\" :  \"" << m_axi_DMA_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_AWLOCK\" :  \"" << m_axi_DMA_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_AWCACHE\" :  \"" << m_axi_DMA_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_AWPROT\" :  \"" << m_axi_DMA_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_AWQOS\" :  \"" << m_axi_DMA_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_AWREGION\" :  \"" << m_axi_DMA_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_AWUSER\" :  \"" << m_axi_DMA_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_WVALID\" :  \"" << m_axi_DMA_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_WREADY\" :  \"" << m_axi_DMA_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_WDATA\" :  \"" << m_axi_DMA_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_WSTRB\" :  \"" << m_axi_DMA_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_WLAST\" :  \"" << m_axi_DMA_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_WID\" :  \"" << m_axi_DMA_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_WUSER\" :  \"" << m_axi_DMA_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARVALID\" :  \"" << m_axi_DMA_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_ARREADY\" :  \"" << m_axi_DMA_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARADDR\" :  \"" << m_axi_DMA_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARID\" :  \"" << m_axi_DMA_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARLEN\" :  \"" << m_axi_DMA_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARSIZE\" :  \"" << m_axi_DMA_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARBURST\" :  \"" << m_axi_DMA_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARLOCK\" :  \"" << m_axi_DMA_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARCACHE\" :  \"" << m_axi_DMA_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARPROT\" :  \"" << m_axi_DMA_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARQOS\" :  \"" << m_axi_DMA_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARREGION\" :  \"" << m_axi_DMA_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_ARUSER\" :  \"" << m_axi_DMA_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_RVALID\" :  \"" << m_axi_DMA_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_RREADY\" :  \"" << m_axi_DMA_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_RDATA\" :  \"" << m_axi_DMA_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_RLAST\" :  \"" << m_axi_DMA_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_RID\" :  \"" << m_axi_DMA_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_RUSER\" :  \"" << m_axi_DMA_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_RRESP\" :  \"" << m_axi_DMA_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_BVALID\" :  \"" << m_axi_DMA_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_DMA_BREADY\" :  \"" << m_axi_DMA_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_BRESP\" :  \"" << m_axi_DMA_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_BID\" :  \"" << m_axi_DMA_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_DMA_BUSER\" :  \"" << m_axi_DMA_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_rx_V_V_TDATA\" :  \"" << data_rx_V_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_rx_V_V_TVALID\" :  \"" << data_rx_V_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_rx_V_V_TREADY\" :  \"" << data_rx_V_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_tx_V_V_TDATA\" :  \"" << data_tx_V_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_tx_V_V_TVALID\" :  \"" << data_tx_V_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_tx_V_V_TREADY\" :  \"" << data_tx_V_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

